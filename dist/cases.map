{
  "version": 3,
  "file": "generated.js",
  "sources": [
    "/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/rmessner/Work/gunray/lib/gunray/collection.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/component.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/computed.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/events.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/index.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/object.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/property.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/router.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/template.coffee",
    "/Users/rmessner/Work/gunray/lib/gunray/utils.coffee",
    "/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/inherits/inherits_browser.js",
    "/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js",
    "/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/util/support/isBufferBrowser.js",
    "/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/util/util.js",
    "/Users/rmessner/Work/gunray/node_modules/lodash/dist/lodash.js",
    "/Users/rmessner/Work/gunray/node_modules/simulate/simulate.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/assert.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/behavior.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/call.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/collection.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/match.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/mock.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/sandbox.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/spy.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/stub.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/test.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/test_case.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/lib/sinon/util/fake_timers.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/node_modules/formatio/lib/formatio.js",
    "/Users/rmessner/Work/gunray/node_modules/sinon/node_modules/formatio/node_modules/samsam/lib/samsam.js",
    "/Users/rmessner/Work/gunray/test/cases/collection_test.coffee",
    "/Users/rmessner/Work/gunray/test/cases/component_test.coffee",
    "/Users/rmessner/Work/gunray/test/cases/object_test.coffee",
    "/Users/rmessner/Work/gunray/test/cases/property_test.coffee",
    "/Users/rmessner/Work/gunray/test/cases/router_test.coffee",
    "/Users/rmessner/Work/gunray/test/cases/templates_test.coffee",
    "/Users/rmessner/Work/gunray/test/helpers.coffee"
  ],
  "names": [],
  "mappings": "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AA,CAAQ,QAAR,CA/Bb,CAAA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvknovznjcvjnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhYA;;;EAAA,MAAA,GAAS,OAAA,C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",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "((g, m, o, p, e, u, _) ->\n\n  t = null\n\n  Collection = ->\n  Collection.create = ->\n    t ||= require('./template.coffee')\n    arg = _.first(arguments)\n\n    u.assert _.isArray(arg), \"Invalid Argument\"\n\n    makeCollectionItem = (item, index) =>\n      retval =\n        switch\n          when o.isObject(item) then item\n          when t.isHtml(item)   then item\n          when _.isObject(item) then o.object(item)\n          when _.isArray(item)  then o.collection(item)\n          else p.property(item)\n      retval.index = p.property(index)\n      retval.collection = p.property(@)\n      retval\n\n    data = _.map arg, makeCollectionItem\n\n    options = _.first(_.rest(arguments)) or {}\n    bindings =  options.bindings or []\n\n    bind = e.bindFunc(@, bindings)\n    trigger = e.triggerFunc(@, bindings)\n    iterator = options.iterator or (x) -> x\n\n    length = -> data.length\n\n    addItem = (item) ->\n      item = makeCollectionItem(item, data.length)\n      data.push item\n      trigger(item, 'add', item, null)\n\n    removeIndex = (index) ->\n      item = atIndex(index)\n      data.splice index, 1\n      _.each data, (item) ->\n        item.index _.indexOf(data, item)\n      trigger(item, 'remove', item, null)\n\n    removeItem = (item) -> removeIndex _.indexOf(data, item)\n\n    atIndex = (i) -> _.first _.at(data, i)\n    each = (func) -> collection _.each(data, func)\n\n    map = (func) ->\n      collection _.map(data, func), bindings: bindings, iterator: func\n\n    collectionHtml = =>\n      arg = _.first arguments\n      makeHtml = (func) =>\n        (item) =>\n          t.html(func(item), collection: @, item: item)\n      switch\n        when _.isFunction(arg)\n          map makeHtml(arg)\n        when _.isObject(arg)\n          ret = p.property([])\n          selectedItem(\n            (item) ->\n              ret(makeHtml(arg.selected)(item))\n          )\n          ret\n\n    reduce = (memo, func) -> _.reduce(data, func, memo)\n\n    find = (matchFunc) ->\n      ret = null\n      each (x) ->\n        return unless matchFunc(x)\n        ret = x\n        false\n      ret\n\n    selectedIndex = p.property(-1)\n    selectedItem = p.property()\n\n    selectedItem (value, previous) ->\n      trigger(value, 'select', value, previous)\n\n    selectedIndex (idx) ->\n      selectedItem(atIndex(idx))\n\n    selected = ->\n      argument = _.first arguments\n      switch\n        when u.isBlank argument\n          selectedItem()\n        when _.isFunction argument\n          selectedItem (item) ->\n            argument(item, selectedIndex())\n        when idx = _.indexOf data, _.first(arguments)\n          selectedIndex idx\n\n    selectAt = (index) ->\n      selectedIndex(index)\n\n    _.extend @,\n      __type__: Collection\n      at: atIndex\n      add: addItem\n      remove: removeItem\n      removeAt: removeIndex\n      bind: bind\n      find: find\n      iterator: iterator\n      trigger: trigger\n      first: -> _.first(data)\n      rest: -> _.rest(data)\n      last: -> _.last(data)\n      length: length\n      each: each\n      map: map\n      html: collectionHtml\n      reduce: reduce\n      selectAt: selectAt\n      selectedIndex: selectedIndex\n      selected: selected\n\n    @\n\n  collection = u.creator(Collection)\n  isCollection = u.isTypeFunc(Collection)\n\n  m.exports =\n    collection: collection\n    isCollection: isCollection\n\n)(@, \\\n  module, \\\n  require('./object.coffee'), \\\n  require('./property.coffee'), \\\n  require('./events.coffee'), \\\n  require('./utils.coffee'), \\\n  require('lodash'))\n",
    "((g, m, p, t, u, _)->\n\n  Component = ->\n  Component.create = (options={})->\n    state = p.property(options.state)\n    name = p.property(options.name)\n    dom =\n      switch\n        when t.isHtml options.html\n          p.property(options.html)\n        when _.isFunction options.html\n          =>\n            @html = p.property(t.html(options.html(state())))\n            @html()\n    #       else null\n\n    #   children = []\n    #   addChild = (child) ->\n    #     children.push child\n    #     dom = @html()\n    #     childDom = child.html()\n    #     # dom.children.push childDom\n    #     dom.appendChild childDom.dom\n\n    _.extend @,\n      __type__: Component\n      state: state\n      html: dom\n      # name: name\n      # addChild: addChild\n\n    @\n\n  component = u.creator(Component)\n  isComponent = u.isTypeFunc(Component)\n\n  m.exports =\n    component: component\n    isComponent: isComponent\n\n)(@, \\\n  module, \\\n  require('./property.coffee'), \\\n  require('./template.coffee'), \\\n  require('./utils.coffee'), \\\n  require('lodash'))\n",
    "((g, m, p, c, u, _) ->\n\n  Computed = ->\n  Computed.create = ->\n    properties = Array::slice.call(arguments)\n    func = properties.pop()\n\n    bindings = []\n\n    _.map properties, (prop) ->\n      switch\n        when c.isCollection(prop)\n          prop.bind -> callBindings()\n        when p.isProperty(prop)\n          prop -> callBindings()\n\n    callBindings = _.debounce((\n      ->\n        _.map(bindings, (binding) -> binding getComputed())\n    ), 1)\n\n    propertyValues = ->\n      _.map properties, (x) ->\n        if p.isProperty(x) then x.call()\n        else x\n\n    getComputed = =>\n      func.apply @, propertyValues()\n\n    retval = (binding) ->\n      unless u.isBlank binding\n        bindings.push(binding)\n      else\n        getComputed()\n\n    _.extend retval,\n      __type__: Computed\n\n    retval\n\n  computed = u.creator(Computed)\n  isComputed = u.isTypeFunc(Computed)\n\n  m.exports =\n    computed: computed\n    isComputed: isComputed\n\n)(@, \\\n  module, \\\n  require('./property.coffee'), \\\n  require('./collection.coffee'), \\\n  require('./utils.coffee'), \\\n  require('lodash'))\n",
    "((g, m, u, _) ->\n\n  bindFunc = (self, bindings) ->\n    ->\n      u.debug \"binding: \", self, bindings, arguments\n      first = _.first(arguments)\n      bound = []\n      switch\n        when _.isFunction(first)\n          bindings.push(event: 'all', callback: first)\n          bound.push _.last(bindings)\n        when _.isObject(first)\n          for event, func of first\n            [event, prop] = event.split(\":\")\n            bindings.push(event: event, callback: func, property: prop)\n            bound.push _.last(bindings)\n      -> _.remove bindings, (x) -> _.include bound, x\n\n  triggerFunc = (self, bindings) ->\n    (item, event, value, previous) ->\n      u.debug \"triggering: \", self, bindings, arguments\n      for binding in _.clone(bindings)\n        if binding.event is event or binding.event is 'all'\n          unless u.isBlank(binding.property)\n            binding.callback(\n              item.get(binding.property), item, event, previous\n            ) unless u.isBlank item.prop(binding.property)\n          else\n            binding.callback(item, event, previous)\n      triggerUpstream(self, arguments)\n\n  triggerUpstream = (item, args) ->\n    if hasUpstream(item)\n      item.collection().trigger.apply(item, args)\n\n  o = c = null\n\n  hasUpstream = (item) ->\n    o ||= require('./object.coffee')\n    c ||= require('./collection.coffee')\n    o.isObject(item) and\n    _.isFunction(item.collection) and\n    c.isCollection(item.collection())\n\n  m.exports =\n    triggerFunc: triggerFunc\n    bindFunc: bindFunc\n\n)(@, module, require('./utils.coffee'), require('lodash'))\n",
    "((g, m, _) ->\n\n  prop      = require('./property.coffee')\n  obj       = require('./object.coffee')\n  coll      = require('./collection.coffee')\n  computed  = require('./computed.coffee')\n  template  = require('./template.coffee')\n  router    = require('./router.coffee')\n  component = require('./component.coffee')\n\n  m.exports =\n    isComponent: component.isComponent\n    component: component.component\n    isProperty: prop.isProperty\n    isObject: obj.isObject\n    isCollection: coll.isCollection\n    isComputed: computed.isComputed\n    isHtml: template.isHtml\n    html: template.html\n    property: prop.property\n    object: obj.object\n    collection: coll.collection\n    computed: computed.computed\n    router: router.router\n    route: router.route\n    history: router.history\n\n)(@, module, require('lodash'))\n",
    "((g, m, p, e, u, _) ->\n\n  c = null\n\n  Obj = ->\n  Obj.create = ->\n    c ||= require './collection.coffee'\n    input = _.first(arguments)\n    data = _.reduce input, (\n      (coll, value, key) ->\n        switch\n          when _.isArray(value)\n            coll[key] = c.collection(value)\n          when _.isObject(value)\n            obj = object(value)\n            coll[key] = obj\n          else\n            coll[key] = p.property()\n            coll[key](value)\n        coll\n      ), {}\n\n    setValue = ->\n      [path, value] = arguments\n      set = (attribute, value) =>\n        prop = getProperty(attribute)\n        u.assert p.isProperty(prop), 'Improper call to set'\n        previous = prop()\n        return if previous is value\n        prop(value)\n        trigger(@, 'update', value, previous)\n      switch\n        when _.isString path\n          set(path, value)\n        when _.isObject path\n          for key, value of path\n            set(key, value)\n\n    getValue = (key) ->\n      getProperty(key)()\n\n    getProperty = (path) ->\n      _.reduce(\n        path.split(\".\"), (\n          (coll, prop) ->\n            switch\n              when (matches = prop.match /^at\\((\\d)\\)$/)\n                u.assert(\n                  c.isCollection(coll), \\\n                  \"Tried to use index access on a non-collection\"\n                )\n                coll.at _.last(matches)\n              when _.isFunction(coll.prop)\n                coll.prop(prop)\n              when _.isObject(coll)\n                coll[prop]\n              else coll\n        ), data\n      )\n\n    bindings = []\n\n    bind = e.bindFunc(@, bindings)\n    trigger = e.triggerFunc(@, bindings)\n\n    _.extend @,\n      __type__: Obj\n      get: getValue\n      set: setValue\n      prop: getProperty\n      bind: bind\n\n    @\n\n  object = u.creator(Obj)\n  isObject = u.isTypeFunc(Obj)\n\n  m.exports =\n    object: object\n    isObject: isObject\n\n)(@, \\\n  module, \\\n  require('./property.coffee'), \\\n  require('./events.coffee'), \\\n  require('./utils.coffee'), \\\n  require('lodash'))\n",
    "((g, m, u, _) ->\n\n  Property = ->\n  Property.create = ->\n    bindings = []\n    value = _.first(arguments)\n    returnFunc = (val) ->\n      switch\n        when !isProperty(val) and _.isFunction(val)\n          bindings.push(val)\n          -> _.remove bindings, (x) -> x is val\n        when u.isBlank(val)\n          value\n        else\n          old = value\n          value = val\n          u.debug \"property changed\", value, bindings\n          for obs in bindings\n            obs(value, old)\n          value\n\n    _.extend returnFunc,\n      __type__: Property\n\n    returnFunc\n\n  property = u.creator(Property)\n  isProperty = u.isTypeFunc(Property)\n\n  m.exports =\n    property: property\n    isProperty: isProperty\n\n)(@, module, require('./utils.coffee'), require('lodash'))\n",
    "((g, m, u, p, c, _) ->\n\n  path = p.property()\n\n  baseRoute = null\n\n  Route = ->\n    _.extend @,\n      handlers: []\n      route: Route.create\n\n  parseRouteCreateArgs = (args) ->\n    [name, handler] = args\n    last = _.last(args)\n    [coll, nested] =\n      switch\n        when args.length is 3 and c.isCollection last\n          [last, null]\n        when args.length is 3 and _.isFunction last\n          [null, last]\n        when args.length is 4\n          [args[2], last]\n        else [null, null]\n    [name, handler, coll, nested]\n\n  Route.create = ->\n    [name, handler, coll, nested] =\n      parseRouteCreateArgs(arguments)\n    @handlers.push\n      name: name\n      handler: handler\n      collection: coll\n      subroute: nested.apply new Route() unless u.isBlank nested\n    @\n\n  Router =\n    map: (func) -> baseRoute = func.apply(new Route())\n    path: -> path()\n    reset: -> baseRoute = null\n\n  History = ->\n  History.create = (options) ->\n    @location = options.location || window.location\n    @pushState = options.pushState || window.history.pushState\n\n    _.extend Router, history: @\n\n    _.extend @,\n      start: (options={}) ->\n        @started = true\n        @usePushState = !!options.pushState\n        @root = \"#{@location.protocol}#{@location.host}\"\n      navigate: (path) ->\n        u.assert(path.match /^\\//, \"must be supply a relative path\")\n        return unless @started\n        if @usePushState\n          @pushState {}, document.title, path\n        else\n          @location.replace \"#{@root}#{path}\"\n        @checkUrl()\n      checkUrl: ->\n        path @location.pathname.replace(/^\\//,'')\n        parts = path().split('/')\n        _.reduce parts, ((current, part) ->\n          return null if u.isBlank current\n          ret = current\n          _.each current.handlers, (handler) ->\n            if matches = handler.name.match /^:([a-zA-Z0-9]+)$/\n              field = _.last matches\n              item = handler.collection.find (x) ->\n                x.get(field) is parseInt(part) or\n                x.get(field) is part\n              return if u.isBlank(item)\n              handler.handler(part, item)\n            else\n              return unless part is handler.name\n              ret = handler.subroute\n              handler.handler(part)\n          ret\n        ), baseRoute\n    @\n\n  history = u.creator(History)\n\n  m.exports =\n    router: Router\n    route: Route.create\n    history: history\n\n)(@, \\\n  module, \\\n  require('./utils.coffee'), \\\n  require('./property.coffee'), \\\n  require('./collection.coffee'), \\\n  require('lodash'))\n",
    "((g, m, p, o, c, d, u, _) ->\n\n  updateClassName = (node, __, classes) ->\n    node.className = classes.join(\" \")\n\n  updateAttribute = (node, name, attr) ->\n    switch name\n      when 'checked'\n        checked = !!attr\n        if checked then node.setAttribute(name, attr)\n        else node.removeAttribute(name)\n        node.checked = checked\n      else\n        node.setAttribute(name, attr)\n\n  updateStyle = (node, property, style) ->\n    node.style.setProperty(property, style)\n\n  updateTextNode = (node, __, value) ->\n    node.data = u.toString(value)\n\n  updateItem = (node, name, prop, updateFunc) ->\n    updateFunc node, name, (\n      if p.isProperty(prop) or d.isComputed(prop)\n        prop(_.curry(updateFunc)(node, name))\n        prop()\n      else prop\n    )\n\n  addTextNode = (node, content) ->\n    textNode = document.createTextNode('')\n    node.appendChild(textNode)\n    updateItem textNode, 'data', content, updateTextNode\n\n  addChildNode = (node, content, coll) ->\n    child = html(content)\n    addChildTemplate.call(@, node, child, coll)\n\n  removeChildDom = (node, child) ->\n    -> node.removeChild(child)\n\n  removeChild = (children, child) ->\n    -> children.slice _.indexOf(children, child), 1\n\n  addChildTemplate = (node, child, coll, event, index) ->\n    @children.push(child)\n    bindChild.apply(@, arguments) unless u.isBlank(coll)\n    if !u.isBlank(index) and index <= node.childNodes.length and !u.isBlank(\n      sibling = node.childNodes[index]\n    )\n      node.insertBefore(child.dom, sibling)\n    else\n      node.appendChild child.dom\n\n  bindChild = (node, child, coll, event) ->\n    domRemove = removeChildDom(node, child.dom)\n    childRemove = removeChild(@children, child)\n    unbindAndRemove = ->\n      domRemove()\n      childRemove()\n      unbind()\n    bindArg = {}\n    bindArg[event] = (item, event, previous) ->\n      if (\n        event is 'remove' and item is child.__context__\n      ) or (\n        event is 'select' and _.last(arguments) is child.__context__\n      ) then unbindAndRemove()\n    unbind = coll.bind(bindArg)\n\n  applyRest = (node, rest, coll) ->\n    for arg in rest\n      switch\n        when isHtml(arg)\n          addChildTemplate.call(@, node, arg, coll, 'remove')\n        when c.isCollection(arg)\n          applyItem = (itemFunc) =>\n            (item) => applyRest.call(@, node, [itemFunc(item)], arg)\n          arg.bind(add: applyItem(arg.iterator))\n          arg.each applyItem((item) -> item)\n        when _.isArray(arg) and _.isArray(_.first(arg))\n          applyRest.call(@, node, arg)\n        when _.isArray(arg)\n          addChildNode.call(@, node, arg)\n        when p.isProperty(arg) and (child = arg()) and _.isArray(child)\n          index = node.childNodes.length\n          updateFunc = (updated) =>\n            addChildTemplate.call(\n              @, node, updated, updated.__collection__, 'select', index\n            )\n          updateFunc(child) unless u.isBlank _.first(child)\n          arg updateFunc\n        else addTextNode.call(@, node, arg)\n\n  tagSplitter = /([^\\s\\.\\#]*)(?:\\#([^\\s\\.\\#]+))?(?:\\.([^\\s\\#]+))?/\n\n  splitTag = (tagName) ->\n    [__, tagName, id, classnames] = tagName.match tagSplitter\n    [tagName or 'div', id, (classnames.split(\".\") if classnames)]\n\n  events = (\n    \"click focus blur dblclick change mousedown mousemove mouseout \" +\n    \"mouseover mouseup resize scroll select submit load unload\"\n  ).split(\" \")\n\n  applyAttributes = (node, id, classes, attributes) ->\n    attributes['id'] = id if id\n    attributes['classes'] = classes if classes\n    if (classname = attributes['class'])\n      attributes['classes'] ||= []\n      attributes['classes'].push classname\n    for name, attr of attributes\n      switch\n        when name is 'classes'\n          updateItem(node, 'className', attr, updateClassName)\n        when name is 'style'\n          for property, style of attr\n            updateItem(node, property, style, updateStyle)\n        when _.include(events, name)\n          attr(node)\n        else\n          updateItem(node, name, attr, updateAttribute)\n\n  getAttributes = (template) ->\n    rest = _.rest(template)\n    next = _.first(rest)\n    if isAttributes(next)\n      [next, _.rest(rest)]\n    else\n      [{}, rest]\n\n  isAttributes = (arg) ->\n    _.isObject(arg) and\n    !_.isArray(arg) and\n    !_.isFunction(arg) and\n    !c.isCollection(arg)\n\n  isTag = (node, tagName) ->\n    !u.isBlank(node) and\n    !u.isBlank(tagName) and\n    node.tagName.toLowerCase() is tagName.toLowerCase()\n\n  findOrCreateDom = (id, tagName) ->\n    ret = document.getElementById(id)\n    if u.isBlank(ret) or !isTag(ret, tagName)\n      document.createElement(tagName)\n    else ret\n\n  Template = ->\n  Template.create = (template, options) ->\n    options = options || {}\n\n    u.assert _.isArray(template), \"Invalid Template\"\n\n    tagName = _.first(template)\n\n    u.assert _.isString(tagName), \"Invalid Template\"\n\n    [tagName, id, classes] = splitTag(tagName)\n    [attributes, rest] = getAttributes(template)\n\n    children = []\n\n    node = findOrCreateDom(id, tagName)\n\n    _.extend @,\n      __type__: Template\n      __context__: options.item\n      __collection__: options.collection\n      dom: node\n      children: children\n\n    applyAttributes.call(@, node, id, classes, attributes)\n    applyRest.call(@, node, rest, options.collection)\n\n    @\n\n  html = u.creator(Template)\n  isHtml = u.isTypeFunc(Template)\n\n  m.exports =\n    html: html\n    isHtml: isHtml\n\n)(@, \\\n  module, \\\n  require('./property.coffee'), \\\n  require('./object.coffee'), \\\n  require('./collection.coffee'), \\\n  require('./computed.coffee'), \\\n  require('./utils.coffee'), \\\n  require('lodash'))\n",
    "((g, m, _) ->\n\n  toString = (x) -> \"\" + x\n\n  isBlank = (val) ->\n    _.isUndefined(val) or _.isNull(val) or\n    _.isEqual({}, val) or _.isEqual([], val)\n\n  creator = (klass) ->\n    -> klass.create.apply(new klass, arguments)\n\n  isTypeFunc = (type) ->\n    (object) -> !isBlank(object) and object.__type__ is type\n\n  assert = (cond, msg) ->\n    if _.isArray(cond)\n      throw msg unless _.all(cond)\n    else\n      throw msg unless cond\n\n  DEBUG = false\n  debug = -> if DEBUG then console.log.apply(console, arguments)\n\n  m.exports =\n    toString: toString\n    isBlank: isBlank\n    isTypeFunc: isTypeFunc\n    creator: creator\n    assert: assert\n    debug: debug\n\n)(@, module, require('lodash'))\n",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
    "// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n",
    "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}",
    "(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require(\"/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "(function (global){\n/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * http://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.1';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "\n!function(){\n\nfunction extend(dst, src){\n    for (var key in src)\n        dst[key] = src[key]\n    return src\n}\n    \nvar Simulate = {\n    event: function(element, eventName){\n        if (document.createEvent) {\n            var evt = document.createEvent(\"HTMLEvents\")\n            evt.initEvent(eventName, true, true )\n            element.dispatchEvent(evt)\n        }else{\n            var evt = document.createEventObject()\n            element.fireEvent('on' + eventName,evt)\n        }\n    },\n    keyEvent: function(element, type, options){\n        var evt,\n            e = {\n            bubbles: true, cancelable: true, view: window,\n          \tctrlKey: false, altKey: false, shiftKey: false, metaKey: false,\n          \tkeyCode: 0, charCode: 0\n        }\n        extend(e, options)\n        if (document.createEvent){\n            try{\n                evt = document.createEvent('KeyEvents')\n                evt.initKeyEvent(\n                    type, e.bubbles, e.cancelable, e.view,\n    \t\t\t\te.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n    \t\t\t\te.keyCode, e.charCode)\n    \t\t\telement.dispatchEvent(evt)\n    \t\t}catch(err){\n    \t\t    evt = document.createEvent(\"Events\")\n\t\t\t\tevt.initEvent(type, e.bubbles, e.cancelable)\n\t\t\t\textend(evt, {\n\t\t\t\t    view: e.view,\n\t\t\t\t\tctrlKey: e.ctrlKey, altKey: e.altKey,\n\t\t\t\t\tshiftKey: e.shiftKey, metaKey: e.metaKey,\n\t\t\t\t\tkeyCode: e.keyCode, charCode: e.charCode\n\t\t\t\t})\n\t\t\t\telement.dispatchEvent(evt)\n    \t\t}\n        }\n    }\n}\n\nSimulate.keypress = function(element, chr){\n    var charCode = chr.charCodeAt(0)\n    this.keyEvent(element, 'keypress', {\n        keyCode: charCode,\n        charCode: charCode\n    })\n}\n\nSimulate.keydown = function(element, chr){\n    var charCode = chr.charCodeAt(0)\n    this.keyEvent(element, 'keydown', {\n        keyCode: charCode,\n        charCode: charCode\n    })\n}\n\nSimulate.keyup = function(element, chr){\n    var charCode = chr.charCodeAt(0)\n    this.keyEvent(element, 'keyup', {\n        keyCode: charCode,\n        charCode: charCode\n    })\n}\n\nvar events = [\n    'click',\n    'focus',\n    'blur',\n    'dblclick',\n    'change',\n    'mousedown',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'resize',\n    'scroll',\n    'select',\n    'submit',\n    'load',\n    'unload'\n]\n\nfor (var i = events.length; i--;){\n    var event = events[i]\n    Simulate[event] = (function(evt){\n        return function(element){\n            this.event(element, evt)\n        }\n    }(event))\n}\n\nif (typeof module !== 'undefined'){\n    module.exports = Simulate\n}else if (typeof window !== 'undefined'){\n    window.Simulate = Simulate\n}else if (typeof define !== 'undefined'){\n    define(function(){ return Simulate })\n}\n\n}()",
    "/*jslint eqeqeq: false, onevar: false, forin: true, nomen: false, regexp: false, plusplus: false*/\n/*global module, require, __dirname, document*/\n/**\n * Sinon core utilities. For internal use only.\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\nvar sinon = (function (formatio) {\n    var div = typeof document != \"undefined\" && document.createElement(\"div\");\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    function isDOMNode(obj) {\n        var success = false;\n\n        try {\n            obj.appendChild(div);\n            success = div.parentNode == obj;\n        } catch (e) {\n            return false;\n        } finally {\n            try {\n                obj.removeChild(div);\n            } catch (e) {\n                // Remove failed, not much we can do about that\n            }\n        }\n\n        return success;\n    }\n\n    function isElement(obj) {\n        return div && obj && obj.nodeType === 1 && isDOMNode(obj);\n    }\n\n    function isFunction(obj) {\n        return typeof obj === \"function\" || !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n\n    function isReallyNaN(val) {\n        return typeof val === 'number' && isNaN(val);\n    }\n\n    function mirrorProperties(target, source) {\n        for (var prop in source) {\n            if (!hasOwn.call(target, prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n\n    function isRestorable (obj) {\n        return typeof obj === \"function\" && typeof obj.restore === \"function\" && obj.restore.sinon;\n    }\n\n    var sinon = {\n        wrapMethod: function wrapMethod(object, property, method) {\n            if (!object) {\n                throw new TypeError(\"Should wrap property of object\");\n            }\n\n            if (typeof method != \"function\") {\n                throw new TypeError(\"Method wrapper should be function\");\n            }\n\n            var wrappedMethod = object[property],\n                error;\n\n            if (!isFunction(wrappedMethod)) {\n                error = new TypeError(\"Attempted to wrap \" + (typeof wrappedMethod) + \" property \" +\n                                    property + \" as function\");\n            }\n\n            if (wrappedMethod.restore && wrappedMethod.restore.sinon) {\n                error = new TypeError(\"Attempted to wrap \" + property + \" which is already wrapped\");\n            }\n\n            if (wrappedMethod.calledBefore) {\n                var verb = !!wrappedMethod.returns ? \"stubbed\" : \"spied on\";\n                error = new TypeError(\"Attempted to wrap \" + property + \" which is already \" + verb);\n            }\n\n            if (error) {\n                if (wrappedMethod._stack) {\n                    error.stack += '\\n--------------\\n' + wrappedMethod._stack;\n                }\n                throw error;\n            }\n\n            // IE 8 does not support hasOwnProperty on the window object and Firefox has a problem\n            // when using hasOwn.call on objects from other frames.\n            var owned = object.hasOwnProperty ? object.hasOwnProperty(property) : hasOwn.call(object, property);\n            object[property] = method;\n            method.displayName = property;\n            // Set up a stack trace which can be used later to find what line of\n            // code the original method was created on.\n            method._stack = (new Error('Stack Trace for original')).stack;\n\n            method.restore = function () {\n                // For prototype properties try to reset by delete first.\n                // If this fails (ex: localStorage on mobile safari) then force a reset\n                // via direct assignment.\n                if (!owned) {\n                    delete object[property];\n                }\n                if (object[property] === method) {\n                    object[property] = wrappedMethod;\n                }\n            };\n\n            method.restore.sinon = true;\n            mirrorProperties(method, wrappedMethod);\n\n            return method;\n        },\n\n        extend: function extend(target) {\n            for (var i = 1, l = arguments.length; i < l; i += 1) {\n                for (var prop in arguments[i]) {\n                    if (arguments[i].hasOwnProperty(prop)) {\n                        target[prop] = arguments[i][prop];\n                    }\n\n                    // DONT ENUM bug, only care about toString\n                    if (arguments[i].hasOwnProperty(\"toString\") &&\n                        arguments[i].toString != target.toString) {\n                        target.toString = arguments[i].toString;\n                    }\n                }\n            }\n\n            return target;\n        },\n\n        create: function create(proto) {\n            var F = function () {};\n            F.prototype = proto;\n            return new F();\n        },\n\n        deepEqual: function deepEqual(a, b) {\n            if (sinon.match && sinon.match.isMatcher(a)) {\n                return a.test(b);\n            }\n\n            if (typeof a != 'object' || typeof b != 'object') {\n                if (isReallyNaN(a) && isReallyNaN(b)) {\n                    return true;\n                } else {\n                    return a === b;\n                }\n            }\n\n            if (isElement(a) || isElement(b)) {\n                return a === b;\n            }\n\n            if (a === b) {\n                return true;\n            }\n\n            if ((a === null && b !== null) || (a !== null && b === null)) {\n                return false;\n            }\n\n            if (a instanceof RegExp && b instanceof RegExp) {\n              return (a.source === b.source) && (a.global === b.global) &&\n                (a.ignoreCase === b.ignoreCase) && (a.multiline === b.multiline);\n            }\n\n            var aString = Object.prototype.toString.call(a);\n            if (aString != Object.prototype.toString.call(b)) {\n                return false;\n            }\n\n            if (aString == \"[object Date]\") {\n                return a.valueOf() === b.valueOf();\n            }\n\n            var prop, aLength = 0, bLength = 0;\n\n            if (aString == \"[object Array]\" && a.length !== b.length) {\n                return false;\n            }\n\n            for (prop in a) {\n                aLength += 1;\n\n                if (!deepEqual(a[prop], b[prop])) {\n                    return false;\n                }\n            }\n\n            for (prop in b) {\n                bLength += 1;\n            }\n\n            return aLength == bLength;\n        },\n\n        functionName: function functionName(func) {\n            var name = func.displayName || func.name;\n\n            // Use function decomposition as a last resort to get function\n            // name. Does not rely on function decomposition to work - if it\n            // doesn't debugging will be slightly less informative\n            // (i.e. toString will say 'spy' rather than 'myFunc').\n            if (!name) {\n                var matches = func.toString().match(/function ([^\\s\\(]+)/);\n                name = matches && matches[1];\n            }\n\n            return name;\n        },\n\n        functionToString: function toString() {\n            if (this.getCall && this.callCount) {\n                var thisValue, prop, i = this.callCount;\n\n                while (i--) {\n                    thisValue = this.getCall(i).thisValue;\n\n                    for (prop in thisValue) {\n                        if (thisValue[prop] === this) {\n                            return prop;\n                        }\n                    }\n                }\n            }\n\n            return this.displayName || \"sinon fake\";\n        },\n\n        getConfig: function (custom) {\n            var config = {};\n            custom = custom || {};\n            var defaults = sinon.defaultConfig;\n\n            for (var prop in defaults) {\n                if (defaults.hasOwnProperty(prop)) {\n                    config[prop] = custom.hasOwnProperty(prop) ? custom[prop] : defaults[prop];\n                }\n            }\n\n            return config;\n        },\n\n        format: function (val) {\n            return \"\" + val;\n        },\n\n        defaultConfig: {\n            injectIntoThis: true,\n            injectInto: null,\n            properties: [\"spy\", \"stub\", \"mock\", \"clock\", \"server\", \"requests\"],\n            useFakeTimers: true,\n            useFakeServer: true\n        },\n\n        timesInWords: function timesInWords(count) {\n            return count == 1 && \"once\" ||\n                count == 2 && \"twice\" ||\n                count == 3 && \"thrice\" ||\n                (count || 0) + \" times\";\n        },\n\n        calledInOrder: function (spies) {\n            for (var i = 1, l = spies.length; i < l; i++) {\n                if (!spies[i - 1].calledBefore(spies[i]) || !spies[i].called) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        orderByFirstCall: function (spies) {\n            return spies.sort(function (a, b) {\n                // uuid, won't ever be equal\n                var aCall = a.getCall(0);\n                var bCall = b.getCall(0);\n                var aId = aCall && aCall.callId || -1;\n                var bId = bCall && bCall.callId || -1;\n\n                return aId < bId ? -1 : 1;\n            });\n        },\n\n        log: function () {},\n\n        logError: function (label, err) {\n            var msg = label + \" threw exception: \";\n            sinon.log(msg + \"[\" + err.name + \"] \" + err.message);\n            if (err.stack) { sinon.log(err.stack); }\n\n            setTimeout(function () {\n                err.message = msg + err.message;\n                throw err;\n            }, 0);\n        },\n\n        typeOf: function (value) {\n            if (value === null) {\n                return \"null\";\n            }\n            else if (value === undefined) {\n                return \"undefined\";\n            }\n            var string = Object.prototype.toString.call(value);\n            return string.substring(8, string.length - 1).toLowerCase();\n        },\n\n        createStubInstance: function (constructor) {\n            if (typeof constructor !== \"function\") {\n                throw new TypeError(\"The constructor should be a function.\");\n            }\n            return sinon.stub(sinon.create(constructor.prototype));\n        },\n\n        restore: function (object) {\n            if (object !== null && typeof object === \"object\") {\n                for (var prop in object) {\n                    if (isRestorable(object[prop])) {\n                        object[prop].restore();\n                    }\n                }\n            }\n            else if (isRestorable(object)) {\n                object.restore();\n            }\n        }\n    };\n\n    var isNode = typeof module !== \"undefined\" && module.exports;\n    var isAMD = typeof define === 'function' && typeof define.amd === 'object' && define.amd;\n\n    if (isAMD) {\n        define(function(){\n            return sinon;\n        });\n    } else if (isNode) {\n        try {\n            formatio = require(\"formatio\");\n        } catch (e) {}\n        module.exports = sinon;\n        module.exports.spy = require(\"./sinon/spy\");\n        module.exports.spyCall = require(\"./sinon/call\");\n        module.exports.behavior = require(\"./sinon/behavior\");\n        module.exports.stub = require(\"./sinon/stub\");\n        module.exports.mock = require(\"./sinon/mock\");\n        module.exports.collection = require(\"./sinon/collection\");\n        module.exports.assert = require(\"./sinon/assert\");\n        module.exports.sandbox = require(\"./sinon/sandbox\");\n        module.exports.test = require(\"./sinon/test\");\n        module.exports.testCase = require(\"./sinon/test_case\");\n        module.exports.assert = require(\"./sinon/assert\");\n        module.exports.match = require(\"./sinon/match\");\n    }\n\n    if (formatio) {\n        var formatter = formatio.configure({ quoteStrings: false });\n        sinon.format = function () {\n            return formatter.ascii.apply(formatter, arguments);\n        };\n    } else if (isNode) {\n        try {\n            var util = require(\"util\");\n            sinon.format = function (value) {\n                return typeof value == \"object\" && value.toString === Object.prototype.toString ? util.inspect(value) : value;\n            };\n        } catch (e) {\n            /* Node, but no util module - would be very old, but better safe than\n             sorry */\n        }\n    }\n\n    return sinon;\n}(typeof formatio == \"object\" && formatio));\n",
    "(function (global){\n/**\n * @depend ../sinon.js\n * @depend stub.js\n */\n/*jslint eqeqeq: false, onevar: false, nomen: false, plusplus: false*/\n/*global module, require, sinon*/\n/**\n * Assertions matching the test spy retrieval interface.\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon, global) {\n    var commonJSModule = typeof module !== \"undefined\" && module.exports;\n    var slice = Array.prototype.slice;\n    var assert;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function verifyIsStub() {\n        var method;\n\n        for (var i = 0, l = arguments.length; i < l; ++i) {\n            method = arguments[i];\n\n            if (!method) {\n                assert.fail(\"fake is not a spy\");\n            }\n\n            if (typeof method != \"function\") {\n                assert.fail(method + \" is not a function\");\n            }\n\n            if (typeof method.getCall != \"function\") {\n                assert.fail(method + \" is not stubbed\");\n            }\n        }\n    }\n\n    function failAssertion(object, msg) {\n        object = object || global;\n        var failMethod = object.fail || assert.fail;\n        failMethod.call(object, msg);\n    }\n\n    function mirrorPropAsAssertion(name, method, message) {\n        if (arguments.length == 2) {\n            message = method;\n            method = name;\n        }\n\n        assert[name] = function (fake) {\n            verifyIsStub(fake);\n\n            var args = slice.call(arguments, 1);\n            var failed = false;\n\n            if (typeof method == \"function\") {\n                failed = !method(fake);\n            } else {\n                failed = typeof fake[method] == \"function\" ?\n                    !fake[method].apply(fake, args) : !fake[method];\n            }\n\n            if (failed) {\n                failAssertion(this, fake.printf.apply(fake, [message].concat(args)));\n            } else {\n                assert.pass(name);\n            }\n        };\n    }\n\n    function exposedName(prefix, prop) {\n        return !prefix || /^fail/.test(prop) ? prop :\n            prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1);\n    }\n\n    assert = {\n        failException: \"AssertError\",\n\n        fail: function fail(message) {\n            var error = new Error(message);\n            error.name = this.failException || assert.failException;\n\n            throw error;\n        },\n\n        pass: function pass(assertion) {},\n\n        callOrder: function assertCallOrder() {\n            verifyIsStub.apply(null, arguments);\n            var expected = \"\", actual = \"\";\n\n            if (!sinon.calledInOrder(arguments)) {\n                try {\n                    expected = [].join.call(arguments, \", \");\n                    var calls = slice.call(arguments);\n                    var i = calls.length;\n                    while (i) {\n                        if (!calls[--i].called) {\n                            calls.splice(i, 1);\n                        }\n                    }\n                    actual = sinon.orderByFirstCall(calls).join(\", \");\n                } catch (e) {\n                    // If this fails, we'll just fall back to the blank string\n                }\n\n                failAssertion(this, \"expected \" + expected + \" to be \" +\n                              \"called in order but were called as \" + actual);\n            } else {\n                assert.pass(\"callOrder\");\n            }\n        },\n\n        callCount: function assertCallCount(method, count) {\n            verifyIsStub(method);\n\n            if (method.callCount != count) {\n                var msg = \"expected %n to be called \" + sinon.timesInWords(count) +\n                    \" but was called %c%C\";\n                failAssertion(this, method.printf(msg));\n            } else {\n                assert.pass(\"callCount\");\n            }\n        },\n\n        expose: function expose(target, options) {\n            if (!target) {\n                throw new TypeError(\"target is null or undefined\");\n            }\n\n            var o = options || {};\n            var prefix = typeof o.prefix == \"undefined\" && \"assert\" || o.prefix;\n            var includeFail = typeof o.includeFail == \"undefined\" || !!o.includeFail;\n\n            for (var method in this) {\n                if (method != \"export\" && (includeFail || !/^(fail)/.test(method))) {\n                    target[exposedName(prefix, method)] = this[method];\n                }\n            }\n\n            return target;\n        },\n\n        match: function match(actual, expectation) {\n            var matcher = sinon.match(expectation);\n            if (matcher.test(actual)) {\n                assert.pass(\"match\");\n            } else {\n                var formatted = [\n                    \"expected value to match\",\n                    \"    expected = \" + sinon.format(expectation),\n                    \"    actual = \" + sinon.format(actual)\n                ]\n                failAssertion(this, formatted.join(\"\\n\"));\n            }\n        }\n    };\n\n    mirrorPropAsAssertion(\"called\", \"expected %n to have been called at least once but was never called\");\n    mirrorPropAsAssertion(\"notCalled\", function (spy) { return !spy.called; },\n                          \"expected %n to not have been called but was called %c%C\");\n    mirrorPropAsAssertion(\"calledOnce\", \"expected %n to be called once but was called %c%C\");\n    mirrorPropAsAssertion(\"calledTwice\", \"expected %n to be called twice but was called %c%C\");\n    mirrorPropAsAssertion(\"calledThrice\", \"expected %n to be called thrice but was called %c%C\");\n    mirrorPropAsAssertion(\"calledOn\", \"expected %n to be called with %1 as this but was called with %t\");\n    mirrorPropAsAssertion(\"alwaysCalledOn\", \"expected %n to always be called with %1 as this but was called with %t\");\n    mirrorPropAsAssertion(\"calledWithNew\", \"expected %n to be called with new\");\n    mirrorPropAsAssertion(\"alwaysCalledWithNew\", \"expected %n to always be called with new\");\n    mirrorPropAsAssertion(\"calledWith\", \"expected %n to be called with arguments %*%C\");\n    mirrorPropAsAssertion(\"calledWithMatch\", \"expected %n to be called with match %*%C\");\n    mirrorPropAsAssertion(\"alwaysCalledWith\", \"expected %n to always be called with arguments %*%C\");\n    mirrorPropAsAssertion(\"alwaysCalledWithMatch\", \"expected %n to always be called with match %*%C\");\n    mirrorPropAsAssertion(\"calledWithExactly\", \"expected %n to be called with exact arguments %*%C\");\n    mirrorPropAsAssertion(\"alwaysCalledWithExactly\", \"expected %n to always be called with exact arguments %*%C\");\n    mirrorPropAsAssertion(\"neverCalledWith\", \"expected %n to never be called with arguments %*%C\");\n    mirrorPropAsAssertion(\"neverCalledWithMatch\", \"expected %n to never be called with match %*%C\");\n    mirrorPropAsAssertion(\"threw\", \"%n did not throw exception%C\");\n    mirrorPropAsAssertion(\"alwaysThrew\", \"%n did not always throw exception%C\");\n\n    if (commonJSModule) {\n        module.exports = assert;\n    } else {\n        sinon.assert = assert;\n    }\n}(typeof sinon == \"object\" && sinon || null, typeof window != \"undefined\" ? window : (typeof self != \"undefined\") ? self : global));\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "(function (process){\n/**\n * @depend ../sinon.js\n */\n/*jslint eqeqeq: false, onevar: false*/\n/*global module, require, sinon, process, setImmediate, setTimeout*/\n/**\n * Stub behavior\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @author Tim Fischbach (mail@timfischbach.de)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    var slice = Array.prototype.slice;\n    var join = Array.prototype.join;\n    var proto;\n\n    var nextTick = (function () {\n        if (typeof process === \"object\" && typeof process.nextTick === \"function\") {\n            return process.nextTick;\n        } else if (typeof setImmediate === \"function\") {\n            return setImmediate;\n        } else {\n            return function (callback) {\n                setTimeout(callback, 0);\n            };\n        }\n    })();\n\n    function throwsException(error, message) {\n        if (typeof error == \"string\") {\n            this.exception = new Error(message || \"\");\n            this.exception.name = error;\n        } else if (!error) {\n            this.exception = new Error(\"Error\");\n        } else {\n            this.exception = error;\n        }\n\n        return this;\n    }\n\n    function getCallback(behavior, args) {\n        var callArgAt = behavior.callArgAt;\n\n        if (callArgAt < 0) {\n            var callArgProp = behavior.callArgProp;\n\n            for (var i = 0, l = args.length; i < l; ++i) {\n                if (!callArgProp && typeof args[i] == \"function\") {\n                    return args[i];\n                }\n\n                if (callArgProp && args[i] &&\n                    typeof args[i][callArgProp] == \"function\") {\n                    return args[i][callArgProp];\n                }\n            }\n\n            return null;\n        }\n\n        return args[callArgAt];\n    }\n\n    function getCallbackError(behavior, func, args) {\n        if (behavior.callArgAt < 0) {\n            var msg;\n\n            if (behavior.callArgProp) {\n                msg = sinon.functionName(behavior.stub) +\n                    \" expected to yield to '\" + behavior.callArgProp +\n                    \"', but no object with such a property was passed.\";\n            } else {\n                msg = sinon.functionName(behavior.stub) +\n                    \" expected to yield, but no callback was passed.\";\n            }\n\n            if (args.length > 0) {\n                msg += \" Received [\" + join.call(args, \", \") + \"]\";\n            }\n\n            return msg;\n        }\n\n        return \"argument at index \" + behavior.callArgAt + \" is not a function: \" + func;\n    }\n\n    function callCallback(behavior, args) {\n        if (typeof behavior.callArgAt == \"number\") {\n            var func = getCallback(behavior, args);\n\n            if (typeof func != \"function\") {\n                throw new TypeError(getCallbackError(behavior, func, args));\n            }\n\n            if (behavior.callbackAsync) {\n                nextTick(function() {\n                    func.apply(behavior.callbackContext, behavior.callbackArguments);\n                });\n            } else {\n                func.apply(behavior.callbackContext, behavior.callbackArguments);\n            }\n        }\n    }\n\n    proto = {\n        create: function(stub) {\n            var behavior = sinon.extend({}, sinon.behavior);\n            delete behavior.create;\n            behavior.stub = stub;\n\n            return behavior;\n        },\n\n        isPresent: function() {\n            return (typeof this.callArgAt == 'number' ||\n                    this.exception ||\n                    typeof this.returnArgAt == 'number' ||\n                    this.returnThis ||\n                    this.returnValueDefined);\n        },\n\n        invoke: function(context, args) {\n            callCallback(this, args);\n\n            if (this.exception) {\n                throw this.exception;\n            } else if (typeof this.returnArgAt == 'number') {\n                return args[this.returnArgAt];\n            } else if (this.returnThis) {\n                return context;\n            }\n\n            return this.returnValue;\n        },\n\n        onCall: function(index) {\n            return this.stub.onCall(index);\n        },\n\n        onFirstCall: function() {\n            return this.stub.onFirstCall();\n        },\n\n        onSecondCall: function() {\n            return this.stub.onSecondCall();\n        },\n\n        onThirdCall: function() {\n            return this.stub.onThirdCall();\n        },\n\n        withArgs: function(/* arguments */) {\n            throw new Error('Defining a stub by invoking \"stub.onCall(...).withArgs(...)\" is not supported. ' +\n                            'Use \"stub.withArgs(...).onCall(...)\" to define sequential behavior for calls with certain arguments.');\n        },\n\n        callsArg: function callsArg(pos) {\n            if (typeof pos != \"number\") {\n                throw new TypeError(\"argument index is not number\");\n            }\n\n            this.callArgAt = pos;\n            this.callbackArguments = [];\n            this.callbackContext = undefined;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        callsArgOn: function callsArgOn(pos, context) {\n            if (typeof pos != \"number\") {\n                throw new TypeError(\"argument index is not number\");\n            }\n            if (typeof context != \"object\") {\n                throw new TypeError(\"argument context is not an object\");\n            }\n\n            this.callArgAt = pos;\n            this.callbackArguments = [];\n            this.callbackContext = context;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        callsArgWith: function callsArgWith(pos) {\n            if (typeof pos != \"number\") {\n                throw new TypeError(\"argument index is not number\");\n            }\n\n            this.callArgAt = pos;\n            this.callbackArguments = slice.call(arguments, 1);\n            this.callbackContext = undefined;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        callsArgOnWith: function callsArgWith(pos, context) {\n            if (typeof pos != \"number\") {\n                throw new TypeError(\"argument index is not number\");\n            }\n            if (typeof context != \"object\") {\n                throw new TypeError(\"argument context is not an object\");\n            }\n\n            this.callArgAt = pos;\n            this.callbackArguments = slice.call(arguments, 2);\n            this.callbackContext = context;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        yields: function () {\n            this.callArgAt = -1;\n            this.callbackArguments = slice.call(arguments, 0);\n            this.callbackContext = undefined;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        yieldsOn: function (context) {\n            if (typeof context != \"object\") {\n                throw new TypeError(\"argument context is not an object\");\n            }\n\n            this.callArgAt = -1;\n            this.callbackArguments = slice.call(arguments, 1);\n            this.callbackContext = context;\n            this.callArgProp = undefined;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        yieldsTo: function (prop) {\n            this.callArgAt = -1;\n            this.callbackArguments = slice.call(arguments, 1);\n            this.callbackContext = undefined;\n            this.callArgProp = prop;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n        yieldsToOn: function (prop, context) {\n            if (typeof context != \"object\") {\n                throw new TypeError(\"argument context is not an object\");\n            }\n\n            this.callArgAt = -1;\n            this.callbackArguments = slice.call(arguments, 2);\n            this.callbackContext = context;\n            this.callArgProp = prop;\n            this.callbackAsync = false;\n\n            return this;\n        },\n\n\n        \"throws\": throwsException,\n        throwsException: throwsException,\n\n        returns: function returns(value) {\n            this.returnValue = value;\n            this.returnValueDefined = true;\n\n            return this;\n        },\n\n        returnsArg: function returnsArg(pos) {\n            if (typeof pos != \"number\") {\n                throw new TypeError(\"argument index is not number\");\n            }\n\n            this.returnArgAt = pos;\n\n            return this;\n        },\n\n        returnsThis: function returnsThis() {\n            this.returnThis = true;\n\n            return this;\n        }\n    };\n\n    // create asynchronous versions of callsArg* and yields* methods\n    for (var method in proto) {\n        // need to avoid creating anotherasync versions of the newly added async methods\n        if (proto.hasOwnProperty(method) &&\n            method.match(/^(callsArg|yields)/) &&\n            !method.match(/Async/)) {\n            proto[method + 'Async'] = (function (syncFnName) {\n                return function () {\n                    var result = this[syncFnName].apply(this, arguments);\n                    this.callbackAsync = true;\n                    return result;\n                };\n            })(method);\n        }\n    }\n\n    if (commonJSModule) {\n        module.exports = proto;\n    } else {\n        sinon.behavior = proto;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n}).call(this,require(\"/Users/rmessner/Work/gunray/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\"))",
    "/**\n  * @depend ../sinon.js\n  * @depend match.js\n  */\n/*jslint eqeqeq: false, onevar: false, plusplus: false*/\n/*global module, require, sinon*/\n/**\n  * Spy calls\n  *\n  * @author Christian Johansen (christian@cjohansen.no)\n  * @author Maximilian Antoni (mail@maxantoni.de)\n  * @license BSD\n  *\n  * Copyright (c) 2010-2013 Christian Johansen\n  * Copyright (c) 2013 Maximilian Antoni\n  */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function throwYieldError(proxy, text, args) {\n        var msg = sinon.functionName(proxy) + text;\n        if (args.length) {\n            msg += \" Received [\" + slice.call(args).join(\", \") + \"]\";\n        }\n        throw new Error(msg);\n    }\n\n    var slice = Array.prototype.slice;\n\n    var callProto = {\n        calledOn: function calledOn(thisValue) {\n            if (sinon.match && sinon.match.isMatcher(thisValue)) {\n                return thisValue.test(this.thisValue);\n            }\n            return this.thisValue === thisValue;\n        },\n\n        calledWith: function calledWith() {\n            for (var i = 0, l = arguments.length; i < l; i += 1) {\n                if (!sinon.deepEqual(arguments[i], this.args[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        calledWithMatch: function calledWithMatch() {\n            for (var i = 0, l = arguments.length; i < l; i += 1) {\n                var actual = this.args[i];\n                var expectation = arguments[i];\n                if (!sinon.match || !sinon.match(expectation).test(actual)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        calledWithExactly: function calledWithExactly() {\n            return arguments.length == this.args.length &&\n                this.calledWith.apply(this, arguments);\n        },\n\n        notCalledWith: function notCalledWith() {\n            return !this.calledWith.apply(this, arguments);\n        },\n\n        notCalledWithMatch: function notCalledWithMatch() {\n            return !this.calledWithMatch.apply(this, arguments);\n        },\n\n        returned: function returned(value) {\n            return sinon.deepEqual(value, this.returnValue);\n        },\n\n        threw: function threw(error) {\n            if (typeof error === \"undefined\" || !this.exception) {\n                return !!this.exception;\n            }\n\n            return this.exception === error || this.exception.name === error;\n        },\n\n        calledWithNew: function calledWithNew() {\n            return this.proxy.prototype && this.thisValue instanceof this.proxy;\n        },\n\n        calledBefore: function (other) {\n            return this.callId < other.callId;\n        },\n\n        calledAfter: function (other) {\n            return this.callId > other.callId;\n        },\n\n        callArg: function (pos) {\n            this.args[pos]();\n        },\n\n        callArgOn: function (pos, thisValue) {\n            this.args[pos].apply(thisValue);\n        },\n\n        callArgWith: function (pos) {\n            this.callArgOnWith.apply(this, [pos, null].concat(slice.call(arguments, 1)));\n        },\n\n        callArgOnWith: function (pos, thisValue) {\n            var args = slice.call(arguments, 2);\n            this.args[pos].apply(thisValue, args);\n        },\n\n        \"yield\": function () {\n            this.yieldOn.apply(this, [null].concat(slice.call(arguments, 0)));\n        },\n\n        yieldOn: function (thisValue) {\n            var args = this.args;\n            for (var i = 0, l = args.length; i < l; ++i) {\n                if (typeof args[i] === \"function\") {\n                    args[i].apply(thisValue, slice.call(arguments, 1));\n                    return;\n                }\n            }\n            throwYieldError(this.proxy, \" cannot yield since no callback was passed.\", args);\n        },\n\n        yieldTo: function (prop) {\n            this.yieldToOn.apply(this, [prop, null].concat(slice.call(arguments, 1)));\n        },\n\n        yieldToOn: function (prop, thisValue) {\n            var args = this.args;\n            for (var i = 0, l = args.length; i < l; ++i) {\n                if (args[i] && typeof args[i][prop] === \"function\") {\n                    args[i][prop].apply(thisValue, slice.call(arguments, 2));\n                    return;\n                }\n            }\n            throwYieldError(this.proxy, \" cannot yield to '\" + prop +\n                \"' since no callback was passed.\", args);\n        },\n\n        toString: function () {\n            var callStr = this.proxy.toString() + \"(\";\n            var args = [];\n\n            for (var i = 0, l = this.args.length; i < l; ++i) {\n                args.push(sinon.format(this.args[i]));\n            }\n\n            callStr = callStr + args.join(\", \") + \")\";\n\n            if (typeof this.returnValue != \"undefined\") {\n                callStr += \" => \" + sinon.format(this.returnValue);\n            }\n\n            if (this.exception) {\n                callStr += \" !\" + this.exception.name;\n\n                if (this.exception.message) {\n                    callStr += \"(\" + this.exception.message + \")\";\n                }\n            }\n\n            return callStr;\n        }\n    };\n\n    callProto.invokeCallback = callProto.yield;\n\n    function createSpyCall(spy, thisValue, args, returnValue, exception, id) {\n        if (typeof id !== \"number\") {\n            throw new TypeError(\"Call id is not a number\");\n        }\n        var proxyCall = sinon.create(callProto);\n        proxyCall.proxy = spy;\n        proxyCall.thisValue = thisValue;\n        proxyCall.args = args;\n        proxyCall.returnValue = returnValue;\n        proxyCall.exception = exception;\n        proxyCall.callId = id;\n\n        return proxyCall;\n    }\n    createSpyCall.toString = callProto.toString; // used by mocks\n\n    if (commonJSModule) {\n        module.exports = createSpyCall;\n    } else {\n        sinon.spyCall = createSpyCall;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n\n",
    "/**\n * @depend ../sinon.js\n * @depend stub.js\n * @depend mock.js\n */\n/*jslint eqeqeq: false, onevar: false, forin: true*/\n/*global module, require, sinon*/\n/**\n * Collections of stubs, spies and mocks.\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n    var push = [].push;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function getFakes(fakeCollection) {\n        if (!fakeCollection.fakes) {\n            fakeCollection.fakes = [];\n        }\n\n        return fakeCollection.fakes;\n    }\n\n    function each(fakeCollection, method) {\n        var fakes = getFakes(fakeCollection);\n\n        for (var i = 0, l = fakes.length; i < l; i += 1) {\n            if (typeof fakes[i][method] == \"function\") {\n                fakes[i][method]();\n            }\n        }\n    }\n\n    function compact(fakeCollection) {\n        var fakes = getFakes(fakeCollection);\n        var i = 0;\n        while (i < fakes.length) {\n          fakes.splice(i, 1);\n        }\n    }\n\n    var collection = {\n        verify: function resolve() {\n            each(this, \"verify\");\n        },\n\n        restore: function restore() {\n            each(this, \"restore\");\n            compact(this);\n        },\n\n        verifyAndRestore: function verifyAndRestore() {\n            var exception;\n\n            try {\n                this.verify();\n            } catch (e) {\n                exception = e;\n            }\n\n            this.restore();\n\n            if (exception) {\n                throw exception;\n            }\n        },\n\n        add: function add(fake) {\n            push.call(getFakes(this), fake);\n            return fake;\n        },\n\n        spy: function spy() {\n            return this.add(sinon.spy.apply(sinon, arguments));\n        },\n\n        stub: function stub(object, property, value) {\n            if (property) {\n                var original = object[property];\n\n                if (typeof original != \"function\") {\n                    if (!hasOwnProperty.call(object, property)) {\n                        throw new TypeError(\"Cannot stub non-existent own property \" + property);\n                    }\n\n                    object[property] = value;\n\n                    return this.add({\n                        restore: function () {\n                            object[property] = original;\n                        }\n                    });\n                }\n            }\n            if (!property && !!object && typeof object == \"object\") {\n                var stubbedObj = sinon.stub.apply(sinon, arguments);\n\n                for (var prop in stubbedObj) {\n                    if (typeof stubbedObj[prop] === \"function\") {\n                        this.add(stubbedObj[prop]);\n                    }\n                }\n\n                return stubbedObj;\n            }\n\n            return this.add(sinon.stub.apply(sinon, arguments));\n        },\n\n        mock: function mock() {\n            return this.add(sinon.mock.apply(sinon, arguments));\n        },\n\n        inject: function inject(obj) {\n            var col = this;\n\n            obj.spy = function () {\n                return col.spy.apply(col, arguments);\n            };\n\n            obj.stub = function () {\n                return col.stub.apply(col, arguments);\n            };\n\n            obj.mock = function () {\n                return col.mock.apply(col, arguments);\n            };\n\n            return obj;\n        }\n    };\n\n    if (commonJSModule) {\n        module.exports = collection;\n    } else {\n        sinon.collection = collection;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/* @depend ../sinon.js */\n/*jslint eqeqeq: false, onevar: false, plusplus: false*/\n/*global module, require, sinon*/\n/**\n * Match functions\n *\n * @author Maximilian Antoni (mail@maxantoni.de)\n * @license BSD\n *\n * Copyright (c) 2012 Maximilian Antoni\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function assertType(value, type, name) {\n        var actual = sinon.typeOf(value);\n        if (actual !== type) {\n            throw new TypeError(\"Expected type of \" + name + \" to be \" +\n                type + \", but was \" + actual);\n        }\n    }\n\n    var matcher = {\n        toString: function () {\n            return this.message;\n        }\n    };\n\n    function isMatcher(object) {\n        return matcher.isPrototypeOf(object);\n    }\n\n    function matchObject(expectation, actual) {\n        if (actual === null || actual === undefined) {\n            return false;\n        }\n        for (var key in expectation) {\n            if (expectation.hasOwnProperty(key)) {\n                var exp = expectation[key];\n                var act = actual[key];\n                if (match.isMatcher(exp)) {\n                    if (!exp.test(act)) {\n                        return false;\n                    }\n                } else if (sinon.typeOf(exp) === \"object\") {\n                    if (!matchObject(exp, act)) {\n                        return false;\n                    }\n                } else if (!sinon.deepEqual(exp, act)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    matcher.or = function (m2) {\n        if (!arguments.length) {\n            throw new TypeError(\"Matcher expected\");\n        } else if (!isMatcher(m2)) {\n            m2 = match(m2);\n        }\n        var m1 = this;\n        var or = sinon.create(matcher);\n        or.test = function (actual) {\n            return m1.test(actual) || m2.test(actual);\n        };\n        or.message = m1.message + \".or(\" + m2.message + \")\";\n        return or;\n    };\n\n    matcher.and = function (m2) {\n        if (!arguments.length) {\n            throw new TypeError(\"Matcher expected\");\n        } else if (!isMatcher(m2)) {\n            m2 = match(m2);\n        }\n        var m1 = this;\n        var and = sinon.create(matcher);\n        and.test = function (actual) {\n            return m1.test(actual) && m2.test(actual);\n        };\n        and.message = m1.message + \".and(\" + m2.message + \")\";\n        return and;\n    };\n\n    var match = function (expectation, message) {\n        var m = sinon.create(matcher);\n        var type = sinon.typeOf(expectation);\n        switch (type) {\n        case \"object\":\n            if (typeof expectation.test === \"function\") {\n                m.test = function (actual) {\n                    return expectation.test(actual) === true;\n                };\n                m.message = \"match(\" + sinon.functionName(expectation.test) + \")\";\n                return m;\n            }\n            var str = [];\n            for (var key in expectation) {\n                if (expectation.hasOwnProperty(key)) {\n                    str.push(key + \": \" + expectation[key]);\n                }\n            }\n            m.test = function (actual) {\n                return matchObject(expectation, actual);\n            };\n            m.message = \"match(\" + str.join(\", \") + \")\";\n            break;\n        case \"number\":\n            m.test = function (actual) {\n                return expectation == actual;\n            };\n            break;\n        case \"string\":\n            m.test = function (actual) {\n                if (typeof actual !== \"string\") {\n                    return false;\n                }\n                return actual.indexOf(expectation) !== -1;\n            };\n            m.message = \"match(\\\"\" + expectation + \"\\\")\";\n            break;\n        case \"regexp\":\n            m.test = function (actual) {\n                if (typeof actual !== \"string\") {\n                    return false;\n                }\n                return expectation.test(actual);\n            };\n            break;\n        case \"function\":\n            m.test = expectation;\n            if (message) {\n                m.message = message;\n            } else {\n                m.message = \"match(\" + sinon.functionName(expectation) + \")\";\n            }\n            break;\n        default:\n            m.test = function (actual) {\n              return sinon.deepEqual(expectation, actual);\n            };\n        }\n        if (!m.message) {\n            m.message = \"match(\" + expectation + \")\";\n        }\n        return m;\n    };\n\n    match.isMatcher = isMatcher;\n\n    match.any = match(function () {\n        return true;\n    }, \"any\");\n\n    match.defined = match(function (actual) {\n        return actual !== null && actual !== undefined;\n    }, \"defined\");\n\n    match.truthy = match(function (actual) {\n        return !!actual;\n    }, \"truthy\");\n\n    match.falsy = match(function (actual) {\n        return !actual;\n    }, \"falsy\");\n\n    match.same = function (expectation) {\n        return match(function (actual) {\n            return expectation === actual;\n        }, \"same(\" + expectation + \")\");\n    };\n\n    match.typeOf = function (type) {\n        assertType(type, \"string\", \"type\");\n        return match(function (actual) {\n            return sinon.typeOf(actual) === type;\n        }, \"typeOf(\\\"\" + type + \"\\\")\");\n    };\n\n    match.instanceOf = function (type) {\n        assertType(type, \"function\", \"type\");\n        return match(function (actual) {\n            return actual instanceof type;\n        }, \"instanceOf(\" + sinon.functionName(type) + \")\");\n    };\n\n    function createPropertyMatcher(propertyTest, messagePrefix) {\n        return function (property, value) {\n            assertType(property, \"string\", \"property\");\n            var onlyProperty = arguments.length === 1;\n            var message = messagePrefix + \"(\\\"\" + property + \"\\\"\";\n            if (!onlyProperty) {\n                message += \", \" + value;\n            }\n            message += \")\";\n            return match(function (actual) {\n                if (actual === undefined || actual === null ||\n                        !propertyTest(actual, property)) {\n                    return false;\n                }\n                return onlyProperty || sinon.deepEqual(value, actual[property]);\n            }, message);\n        };\n    }\n\n    match.has = createPropertyMatcher(function (actual, property) {\n        if (typeof actual === \"object\") {\n            return property in actual;\n        }\n        return actual[property] !== undefined;\n    }, \"has\");\n\n    match.hasOwn = createPropertyMatcher(function (actual, property) {\n        return actual.hasOwnProperty(property);\n    }, \"hasOwn\");\n\n    match.bool = match.typeOf(\"boolean\");\n    match.number = match.typeOf(\"number\");\n    match.string = match.typeOf(\"string\");\n    match.object = match.typeOf(\"object\");\n    match.func = match.typeOf(\"function\");\n    match.array = match.typeOf(\"array\");\n    match.regexp = match.typeOf(\"regexp\");\n    match.date = match.typeOf(\"date\");\n\n    if (commonJSModule) {\n        module.exports = match;\n    } else {\n        sinon.match = match;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/**\n * @depend ../sinon.js\n * @depend stub.js\n */\n/*jslint eqeqeq: false, onevar: false, nomen: false*/\n/*global module, require, sinon*/\n/**\n * Mock functions.\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n    var push = [].push;\n    var match;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    match = sinon.match;\n\n    if (!match && commonJSModule) {\n        match = require(\"./match\");\n    }\n\n    function mock(object) {\n        if (!object) {\n            return sinon.expectation.create(\"Anonymous mock\");\n        }\n\n        return mock.create(object);\n    }\n\n    sinon.mock = mock;\n\n    sinon.extend(mock, (function () {\n        function each(collection, callback) {\n            if (!collection) {\n                return;\n            }\n\n            for (var i = 0, l = collection.length; i < l; i += 1) {\n                callback(collection[i]);\n            }\n        }\n\n        return {\n            create: function create(object) {\n                if (!object) {\n                    throw new TypeError(\"object is null\");\n                }\n\n                var mockObject = sinon.extend({}, mock);\n                mockObject.object = object;\n                delete mockObject.create;\n\n                return mockObject;\n            },\n\n            expects: function expects(method) {\n                if (!method) {\n                    throw new TypeError(\"method is falsy\");\n                }\n\n                if (!this.expectations) {\n                    this.expectations = {};\n                    this.proxies = [];\n                }\n\n                if (!this.expectations[method]) {\n                    this.expectations[method] = [];\n                    var mockObject = this;\n\n                    sinon.wrapMethod(this.object, method, function () {\n                        return mockObject.invokeMethod(method, this, arguments);\n                    });\n\n                    push.call(this.proxies, method);\n                }\n\n                var expectation = sinon.expectation.create(method);\n                push.call(this.expectations[method], expectation);\n\n                return expectation;\n            },\n\n            restore: function restore() {\n                var object = this.object;\n\n                each(this.proxies, function (proxy) {\n                    if (typeof object[proxy].restore == \"function\") {\n                        object[proxy].restore();\n                    }\n                });\n            },\n\n            verify: function verify() {\n                var expectations = this.expectations || {};\n                var messages = [], met = [];\n\n                each(this.proxies, function (proxy) {\n                    each(expectations[proxy], function (expectation) {\n                        if (!expectation.met()) {\n                            push.call(messages, expectation.toString());\n                        } else {\n                            push.call(met, expectation.toString());\n                        }\n                    });\n                });\n\n                this.restore();\n\n                if (messages.length > 0) {\n                    sinon.expectation.fail(messages.concat(met).join(\"\\n\"));\n                } else {\n                    sinon.expectation.pass(messages.concat(met).join(\"\\n\"));\n                }\n\n                return true;\n            },\n\n            invokeMethod: function invokeMethod(method, thisValue, args) {\n                var expectations = this.expectations && this.expectations[method];\n                var length = expectations && expectations.length || 0, i;\n\n                for (i = 0; i < length; i += 1) {\n                    if (!expectations[i].met() &&\n                        expectations[i].allowsCall(thisValue, args)) {\n                        return expectations[i].apply(thisValue, args);\n                    }\n                }\n\n                var messages = [], available, exhausted = 0;\n\n                for (i = 0; i < length; i += 1) {\n                    if (expectations[i].allowsCall(thisValue, args)) {\n                        available = available || expectations[i];\n                    } else {\n                        exhausted += 1;\n                    }\n                    push.call(messages, \"    \" + expectations[i].toString());\n                }\n\n                if (exhausted === 0) {\n                    return available.apply(thisValue, args);\n                }\n\n                messages.unshift(\"Unexpected call: \" + sinon.spyCall.toString.call({\n                    proxy: method,\n                    args: args\n                }));\n\n                sinon.expectation.fail(messages.join(\"\\n\"));\n            }\n        };\n    }()));\n\n    var times = sinon.timesInWords;\n\n    sinon.expectation = (function () {\n        var slice = Array.prototype.slice;\n        var _invoke = sinon.spy.invoke;\n\n        function callCountInWords(callCount) {\n            if (callCount == 0) {\n                return \"never called\";\n            } else {\n                return \"called \" + times(callCount);\n            }\n        }\n\n        function expectedCallCountInWords(expectation) {\n            var min = expectation.minCalls;\n            var max = expectation.maxCalls;\n\n            if (typeof min == \"number\" && typeof max == \"number\") {\n                var str = times(min);\n\n                if (min != max) {\n                    str = \"at least \" + str + \" and at most \" + times(max);\n                }\n\n                return str;\n            }\n\n            if (typeof min == \"number\") {\n                return \"at least \" + times(min);\n            }\n\n            return \"at most \" + times(max);\n        }\n\n        function receivedMinCalls(expectation) {\n            var hasMinLimit = typeof expectation.minCalls == \"number\";\n            return !hasMinLimit || expectation.callCount >= expectation.minCalls;\n        }\n\n        function receivedMaxCalls(expectation) {\n            if (typeof expectation.maxCalls != \"number\") {\n                return false;\n            }\n\n            return expectation.callCount == expectation.maxCalls;\n        }\n\n        function verifyMatcher(possibleMatcher, arg){\n            if (match && match.isMatcher(possibleMatcher)) {\n                return possibleMatcher.test(arg);\n            } else {\n                return true;\n            }\n        }\n\n        return {\n            minCalls: 1,\n            maxCalls: 1,\n\n            create: function create(methodName) {\n                var expectation = sinon.extend(sinon.stub.create(), sinon.expectation);\n                delete expectation.create;\n                expectation.method = methodName;\n\n                return expectation;\n            },\n\n            invoke: function invoke(func, thisValue, args) {\n                this.verifyCallAllowed(thisValue, args);\n\n                return _invoke.apply(this, arguments);\n            },\n\n            atLeast: function atLeast(num) {\n                if (typeof num != \"number\") {\n                    throw new TypeError(\"'\" + num + \"' is not number\");\n                }\n\n                if (!this.limitsSet) {\n                    this.maxCalls = null;\n                    this.limitsSet = true;\n                }\n\n                this.minCalls = num;\n\n                return this;\n            },\n\n            atMost: function atMost(num) {\n                if (typeof num != \"number\") {\n                    throw new TypeError(\"'\" + num + \"' is not number\");\n                }\n\n                if (!this.limitsSet) {\n                    this.minCalls = null;\n                    this.limitsSet = true;\n                }\n\n                this.maxCalls = num;\n\n                return this;\n            },\n\n            never: function never() {\n                return this.exactly(0);\n            },\n\n            once: function once() {\n                return this.exactly(1);\n            },\n\n            twice: function twice() {\n                return this.exactly(2);\n            },\n\n            thrice: function thrice() {\n                return this.exactly(3);\n            },\n\n            exactly: function exactly(num) {\n                if (typeof num != \"number\") {\n                    throw new TypeError(\"'\" + num + \"' is not a number\");\n                }\n\n                this.atLeast(num);\n                return this.atMost(num);\n            },\n\n            met: function met() {\n                return !this.failed && receivedMinCalls(this);\n            },\n\n            verifyCallAllowed: function verifyCallAllowed(thisValue, args) {\n                if (receivedMaxCalls(this)) {\n                    this.failed = true;\n                    sinon.expectation.fail(this.method + \" already called \" + times(this.maxCalls));\n                }\n\n                if (\"expectedThis\" in this && this.expectedThis !== thisValue) {\n                    sinon.expectation.fail(this.method + \" called with \" + thisValue + \" as thisValue, expected \" +\n                        this.expectedThis);\n                }\n\n                if (!(\"expectedArguments\" in this)) {\n                    return;\n                }\n\n                if (!args) {\n                    sinon.expectation.fail(this.method + \" received no arguments, expected \" +\n                        sinon.format(this.expectedArguments));\n                }\n\n                if (args.length < this.expectedArguments.length) {\n                    sinon.expectation.fail(this.method + \" received too few arguments (\" + sinon.format(args) +\n                        \"), expected \" + sinon.format(this.expectedArguments));\n                }\n\n                if (this.expectsExactArgCount &&\n                    args.length != this.expectedArguments.length) {\n                    sinon.expectation.fail(this.method + \" received too many arguments (\" + sinon.format(args) +\n                        \"), expected \" + sinon.format(this.expectedArguments));\n                }\n\n                for (var i = 0, l = this.expectedArguments.length; i < l; i += 1) {\n\n                    if (!verifyMatcher(this.expectedArguments[i],args[i])) {\n                        sinon.expectation.fail(this.method + \" received wrong arguments \" + sinon.format(args) +\n                            \", didn't match \" + this.expectedArguments.toString());\n                    }\n\n                    if (!sinon.deepEqual(this.expectedArguments[i], args[i])) {\n                        sinon.expectation.fail(this.method + \" received wrong arguments \" + sinon.format(args) +\n                            \", expected \" + sinon.format(this.expectedArguments));\n                    }\n                }\n            },\n\n            allowsCall: function allowsCall(thisValue, args) {\n                if (this.met() && receivedMaxCalls(this)) {\n                    return false;\n                }\n\n                if (\"expectedThis\" in this && this.expectedThis !== thisValue) {\n                    return false;\n                }\n\n                if (!(\"expectedArguments\" in this)) {\n                    return true;\n                }\n\n                args = args || [];\n\n                if (args.length < this.expectedArguments.length) {\n                    return false;\n                }\n\n                if (this.expectsExactArgCount &&\n                    args.length != this.expectedArguments.length) {\n                    return false;\n                }\n\n                for (var i = 0, l = this.expectedArguments.length; i < l; i += 1) {\n                    if (!verifyMatcher(this.expectedArguments[i],args[i])) {\n                        return false;\n                    }\n\n                    if (!sinon.deepEqual(this.expectedArguments[i], args[i])) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            withArgs: function withArgs() {\n                this.expectedArguments = slice.call(arguments);\n                return this;\n            },\n\n            withExactArgs: function withExactArgs() {\n                this.withArgs.apply(this, arguments);\n                this.expectsExactArgCount = true;\n                return this;\n            },\n\n            on: function on(thisValue) {\n                this.expectedThis = thisValue;\n                return this;\n            },\n\n            toString: function () {\n                var args = (this.expectedArguments || []).slice();\n\n                if (!this.expectsExactArgCount) {\n                    push.call(args, \"[...]\");\n                }\n\n                var callStr = sinon.spyCall.toString.call({\n                    proxy: this.method || \"anonymous mock expectation\",\n                    args: args\n                });\n\n                var message = callStr.replace(\", [...\", \"[, ...\") + \" \" +\n                    expectedCallCountInWords(this);\n\n                if (this.met()) {\n                    return \"Expectation met: \" + message;\n                }\n\n                return \"Expected \" + message + \" (\" +\n                    callCountInWords(this.callCount) + \")\";\n            },\n\n            verify: function verify() {\n                if (!this.met()) {\n                    sinon.expectation.fail(this.toString());\n                } else {\n                    sinon.expectation.pass(this.toString());\n                }\n\n                return true;\n            },\n\n            pass: function(message) {\n              sinon.assert.pass(message);\n            },\n            fail: function (message) {\n                var exception = new Error(message);\n                exception.name = \"ExpectationError\";\n\n                throw exception;\n            }\n        };\n    }());\n\n    if (commonJSModule) {\n        module.exports = mock;\n    } else {\n        sinon.mock = mock;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/**\n * @depend ../sinon.js\n * @depend collection.js\n * @depend util/fake_timers.js\n * @depend util/fake_server_with_clock.js\n */\n/*jslint eqeqeq: false, onevar: false, plusplus: false*/\n/*global require, module*/\n/**\n * Manages fake collections as well as fake utilities such as Sinon's\n * timers and fake XHR implementation in one convenient object.\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\nif (typeof module !== 'undefined' && module.exports) {\n    var sinon = require(\"../sinon\");\n    sinon.extend(sinon, require(\"./util/fake_timers\"));\n}\n\n(function () {\n    var push = [].push;\n\n    function exposeValue(sandbox, config, key, value) {\n        if (!value) {\n            return;\n        }\n\n        if (config.injectInto && !(key in config.injectInto)) {\n            config.injectInto[key] = value;\n            sandbox.injectedKeys.push(key);\n        } else {\n            push.call(sandbox.args, value);\n        }\n    }\n\n    function prepareSandboxFromConfig(config) {\n        var sandbox = sinon.create(sinon.sandbox);\n\n        if (config.useFakeServer) {\n            if (typeof config.useFakeServer == \"object\") {\n                sandbox.serverPrototype = config.useFakeServer;\n            }\n\n            sandbox.useFakeServer();\n        }\n\n        if (config.useFakeTimers) {\n            if (typeof config.useFakeTimers == \"object\") {\n                sandbox.useFakeTimers.apply(sandbox, config.useFakeTimers);\n            } else {\n                sandbox.useFakeTimers();\n            }\n        }\n\n        return sandbox;\n    }\n\n    sinon.sandbox = sinon.extend(sinon.create(sinon.collection), {\n        useFakeTimers: function useFakeTimers() {\n            this.clock = sinon.useFakeTimers.apply(sinon, arguments);\n\n            return this.add(this.clock);\n        },\n\n        serverPrototype: sinon.fakeServer,\n\n        useFakeServer: function useFakeServer() {\n            var proto = this.serverPrototype || sinon.fakeServer;\n\n            if (!proto || !proto.create) {\n                return null;\n            }\n\n            this.server = proto.create();\n            return this.add(this.server);\n        },\n\n        inject: function (obj) {\n            sinon.collection.inject.call(this, obj);\n\n            if (this.clock) {\n                obj.clock = this.clock;\n            }\n\n            if (this.server) {\n                obj.server = this.server;\n                obj.requests = this.server.requests;\n            }\n\n            return obj;\n        },\n\n        restore: function () {\n            sinon.collection.restore.apply(this, arguments);\n            this.restoreContext();\n        },\n\n        restoreContext: function () {\n            if (this.injectedKeys) {\n                for (var i = 0, j = this.injectedKeys.length; i < j; i++) {\n                    delete this.injectInto[this.injectedKeys[i]];\n                }\n                this.injectedKeys = [];\n            }\n        },\n\n        create: function (config) {\n            if (!config) {\n                return sinon.create(sinon.sandbox);\n            }\n\n            var sandbox = prepareSandboxFromConfig(config);\n            sandbox.args = sandbox.args || [];\n            sandbox.injectedKeys = [];\n            sandbox.injectInto = config.injectInto;\n            var prop, value, exposed = sandbox.inject({});\n\n            if (config.properties) {\n                for (var i = 0, l = config.properties.length; i < l; i++) {\n                    prop = config.properties[i];\n                    value = exposed[prop] || prop == \"sandbox\" && sandbox;\n                    exposeValue(sandbox, config, prop, value);\n                }\n            } else {\n                exposeValue(sandbox, config, \"sandbox\", value);\n            }\n\n            return sandbox;\n        }\n    });\n\n    sinon.sandbox.useFakeXMLHttpRequest = sinon.sandbox.useFakeServer;\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = sinon.sandbox;\n    }\n}());\n",
    "/**\n  * @depend ../sinon.js\n  * @depend call.js\n  */\n/*jslint eqeqeq: false, onevar: false, plusplus: false*/\n/*global module, require, sinon*/\n/**\n  * Spy functions\n  *\n  * @author Christian Johansen (christian@cjohansen.no)\n  * @license BSD\n  *\n  * Copyright (c) 2010-2013 Christian Johansen\n  */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n    var push = Array.prototype.push;\n    var slice = Array.prototype.slice;\n    var callId = 0;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function spy(object, property) {\n        if (!property && typeof object == \"function\") {\n            return spy.create(object);\n        }\n\n        if (!object && !property) {\n            return spy.create(function () { });\n        }\n\n        var method = object[property];\n        return sinon.wrapMethod(object, property, spy.create(method));\n    }\n\n    function matchingFake(fakes, args, strict) {\n        if (!fakes) {\n            return;\n        }\n\n        for (var i = 0, l = fakes.length; i < l; i++) {\n            if (fakes[i].matches(args, strict)) {\n                return fakes[i];\n            }\n        }\n    }\n\n    function incrementCallCount() {\n        this.called = true;\n        this.callCount += 1;\n        this.notCalled = false;\n        this.calledOnce = this.callCount == 1;\n        this.calledTwice = this.callCount == 2;\n        this.calledThrice = this.callCount == 3;\n    }\n\n    function createCallProperties() {\n        this.firstCall = this.getCall(0);\n        this.secondCall = this.getCall(1);\n        this.thirdCall = this.getCall(2);\n        this.lastCall = this.getCall(this.callCount - 1);\n    }\n\n    var vars = \"a,b,c,d,e,f,g,h,i,j,k,l\";\n    function createProxy(func) {\n        // Retain the function length:\n        var p;\n        if (func.length) {\n            eval(\"p = (function proxy(\" + vars.substring(0, func.length * 2 - 1) +\n                \") { return p.invoke(func, this, slice.call(arguments)); });\");\n        }\n        else {\n            p = function proxy() {\n                return p.invoke(func, this, slice.call(arguments));\n            };\n        }\n        return p;\n    }\n\n    var uuid = 0;\n\n    // Public API\n    var spyApi = {\n        reset: function () {\n            this.called = false;\n            this.notCalled = true;\n            this.calledOnce = false;\n            this.calledTwice = false;\n            this.calledThrice = false;\n            this.callCount = 0;\n            this.firstCall = null;\n            this.secondCall = null;\n            this.thirdCall = null;\n            this.lastCall = null;\n            this.args = [];\n            this.returnValues = [];\n            this.thisValues = [];\n            this.exceptions = [];\n            this.callIds = [];\n            if (this.fakes) {\n                for (var i = 0; i < this.fakes.length; i++) {\n                    this.fakes[i].reset();\n                }\n            }\n        },\n\n        create: function create(func) {\n            var name;\n\n            if (typeof func != \"function\") {\n                func = function () { };\n            } else {\n                name = sinon.functionName(func);\n            }\n\n            var proxy = createProxy(func);\n\n            sinon.extend(proxy, spy);\n            delete proxy.create;\n            sinon.extend(proxy, func);\n\n            proxy.reset();\n            proxy.prototype = func.prototype;\n            proxy.displayName = name || \"spy\";\n            proxy.toString = sinon.functionToString;\n            proxy._create = sinon.spy.create;\n            proxy.id = \"spy#\" + uuid++;\n\n            return proxy;\n        },\n\n        invoke: function invoke(func, thisValue, args) {\n            var matching = matchingFake(this.fakes, args);\n            var exception, returnValue;\n\n            incrementCallCount.call(this);\n            push.call(this.thisValues, thisValue);\n            push.call(this.args, args);\n            push.call(this.callIds, callId++);\n\n            try {\n                if (matching) {\n                    returnValue = matching.invoke(func, thisValue, args);\n                } else {\n                    returnValue = (this.func || func).apply(thisValue, args);\n                }\n\n                var thisCall = this.getCall(this.callCount - 1);\n                if (thisCall.calledWithNew() && typeof returnValue !== 'object') {\n                    returnValue = thisValue;\n                }\n            } catch (e) {\n                exception = e;\n            }\n\n            push.call(this.exceptions, exception);\n            push.call(this.returnValues, returnValue);\n\n            createCallProperties.call(this);\n\n            if (exception !== undefined) {\n                throw exception;\n            }\n\n            return returnValue;\n        },\n\n        getCall: function getCall(i) {\n            if (i < 0 || i >= this.callCount) {\n                return null;\n            }\n\n            return sinon.spyCall(this, this.thisValues[i], this.args[i],\n                                    this.returnValues[i], this.exceptions[i],\n                                    this.callIds[i]);\n        },\n\n        getCalls: function () {\n            var calls = [];\n            var i;\n\n            for (i = 0; i < this.callCount; i++) {\n                calls.push(this.getCall(i));\n            }\n\n            return calls;\n        },\n\n        calledBefore: function calledBefore(spyFn) {\n            if (!this.called) {\n                return false;\n            }\n\n            if (!spyFn.called) {\n                return true;\n            }\n\n            return this.callIds[0] < spyFn.callIds[spyFn.callIds.length - 1];\n        },\n\n        calledAfter: function calledAfter(spyFn) {\n            if (!this.called || !spyFn.called) {\n                return false;\n            }\n\n            return this.callIds[this.callCount - 1] > spyFn.callIds[spyFn.callCount - 1];\n        },\n\n        withArgs: function () {\n            var args = slice.call(arguments);\n\n            if (this.fakes) {\n                var match = matchingFake(this.fakes, args, true);\n\n                if (match) {\n                    return match;\n                }\n            } else {\n                this.fakes = [];\n            }\n\n            var original = this;\n            var fake = this._create();\n            fake.matchingAguments = args;\n            fake.parent = this;\n            push.call(this.fakes, fake);\n\n            fake.withArgs = function () {\n                return original.withArgs.apply(original, arguments);\n            };\n\n            for (var i = 0; i < this.args.length; i++) {\n                if (fake.matches(this.args[i])) {\n                    incrementCallCount.call(fake);\n                    push.call(fake.thisValues, this.thisValues[i]);\n                    push.call(fake.args, this.args[i]);\n                    push.call(fake.returnValues, this.returnValues[i]);\n                    push.call(fake.exceptions, this.exceptions[i]);\n                    push.call(fake.callIds, this.callIds[i]);\n                }\n            }\n            createCallProperties.call(fake);\n\n            return fake;\n        },\n\n        matches: function (args, strict) {\n            var margs = this.matchingAguments;\n\n            if (margs.length <= args.length &&\n                sinon.deepEqual(margs, args.slice(0, margs.length))) {\n                return !strict || margs.length == args.length;\n            }\n        },\n\n        printf: function (format) {\n            var spy = this;\n            var args = slice.call(arguments, 1);\n            var formatter;\n\n            return (format || \"\").replace(/%(.)/g, function (match, specifyer) {\n                formatter = spyApi.formatters[specifyer];\n\n                if (typeof formatter == \"function\") {\n                    return formatter.call(null, spy, args);\n                } else if (!isNaN(parseInt(specifyer, 10))) {\n                    return sinon.format(args[specifyer - 1]);\n                }\n\n                return \"%\" + specifyer;\n            });\n        }\n    };\n\n    function delegateToCalls(method, matchAny, actual, notCalled) {\n        spyApi[method] = function () {\n            if (!this.called) {\n                if (notCalled) {\n                    return notCalled.apply(this, arguments);\n                }\n                return false;\n            }\n\n            var currentCall;\n            var matches = 0;\n\n            for (var i = 0, l = this.callCount; i < l; i += 1) {\n                currentCall = this.getCall(i);\n\n                if (currentCall[actual || method].apply(currentCall, arguments)) {\n                    matches += 1;\n\n                    if (matchAny) {\n                        return true;\n                    }\n                }\n            }\n\n            return matches === this.callCount;\n        };\n    }\n\n    delegateToCalls(\"calledOn\", true);\n    delegateToCalls(\"alwaysCalledOn\", false, \"calledOn\");\n    delegateToCalls(\"calledWith\", true);\n    delegateToCalls(\"calledWithMatch\", true);\n    delegateToCalls(\"alwaysCalledWith\", false, \"calledWith\");\n    delegateToCalls(\"alwaysCalledWithMatch\", false, \"calledWithMatch\");\n    delegateToCalls(\"calledWithExactly\", true);\n    delegateToCalls(\"alwaysCalledWithExactly\", false, \"calledWithExactly\");\n    delegateToCalls(\"neverCalledWith\", false, \"notCalledWith\",\n        function () { return true; });\n    delegateToCalls(\"neverCalledWithMatch\", false, \"notCalledWithMatch\",\n        function () { return true; });\n    delegateToCalls(\"threw\", true);\n    delegateToCalls(\"alwaysThrew\", false, \"threw\");\n    delegateToCalls(\"returned\", true);\n    delegateToCalls(\"alwaysReturned\", false, \"returned\");\n    delegateToCalls(\"calledWithNew\", true);\n    delegateToCalls(\"alwaysCalledWithNew\", false, \"calledWithNew\");\n    delegateToCalls(\"callArg\", false, \"callArgWith\", function () {\n        throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n    });\n    spyApi.callArgWith = spyApi.callArg;\n    delegateToCalls(\"callArgOn\", false, \"callArgOnWith\", function () {\n        throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n    });\n    spyApi.callArgOnWith = spyApi.callArgOn;\n    delegateToCalls(\"yield\", false, \"yield\", function () {\n        throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n    });\n    // \"invokeCallback\" is an alias for \"yield\" since \"yield\" is invalid in strict mode.\n    spyApi.invokeCallback = spyApi.yield;\n    delegateToCalls(\"yieldOn\", false, \"yieldOn\", function () {\n        throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n    });\n    delegateToCalls(\"yieldTo\", false, \"yieldTo\", function (property) {\n        throw new Error(this.toString() + \" cannot yield to '\" + property +\n            \"' since it was not yet invoked.\");\n    });\n    delegateToCalls(\"yieldToOn\", false, \"yieldToOn\", function (property) {\n        throw new Error(this.toString() + \" cannot yield to '\" + property +\n            \"' since it was not yet invoked.\");\n    });\n\n    spyApi.formatters = {\n        \"c\": function (spy) {\n            return sinon.timesInWords(spy.callCount);\n        },\n\n        \"n\": function (spy) {\n            return spy.toString();\n        },\n\n        \"C\": function (spy) {\n            var calls = [];\n\n            for (var i = 0, l = spy.callCount; i < l; ++i) {\n                var stringifiedCall = \"    \" + spy.getCall(i).toString();\n                if (/\\n/.test(calls[i - 1])) {\n                    stringifiedCall = \"\\n\" + stringifiedCall;\n                }\n                push.call(calls, stringifiedCall);\n            }\n\n            return calls.length > 0 ? \"\\n\" + calls.join(\"\\n\") : \"\";\n        },\n\n        \"t\": function (spy) {\n            var objects = [];\n\n            for (var i = 0, l = spy.callCount; i < l; ++i) {\n                push.call(objects, sinon.format(spy.thisValues[i]));\n            }\n\n            return objects.join(\", \");\n        },\n\n        \"*\": function (spy, args) {\n            var formatted = [];\n\n            for (var i = 0, l = args.length; i < l; ++i) {\n                push.call(formatted, sinon.format(args[i]));\n            }\n\n            return formatted.join(\", \");\n        }\n    };\n\n    sinon.extend(spy, spyApi);\n\n    spy.spyCall = sinon.spyCall;\n\n    if (commonJSModule) {\n        module.exports = spy;\n    } else {\n        sinon.spy = spy;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/**\n * @depend ../sinon.js\n * @depend spy.js\n * @depend behavior.js\n */\n/*jslint eqeqeq: false, onevar: false*/\n/*global module, require, sinon*/\n/**\n * Stub functions\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function stub(object, property, func) {\n        if (!!func && typeof func != \"function\") {\n            throw new TypeError(\"Custom stub should be function\");\n        }\n\n        var wrapper;\n\n        if (func) {\n            wrapper = sinon.spy && sinon.spy.create ? sinon.spy.create(func) : func;\n        } else {\n            wrapper = stub.create();\n        }\n\n        if (!object && typeof property === \"undefined\") {\n            return sinon.stub.create();\n        }\n\n        if (typeof property === \"undefined\" && typeof object == \"object\") {\n            for (var prop in object) {\n                if (typeof object[prop] === \"function\") {\n                    stub(object, prop);\n                }\n            }\n\n            return object;\n        }\n\n        return sinon.wrapMethod(object, property, wrapper);\n    }\n\n    function getDefaultBehavior(stub) {\n        return stub.defaultBehavior || getParentBehaviour(stub) || sinon.behavior.create(stub);\n    }\n\n    function getParentBehaviour(stub) {\n        return (stub.parent && getCurrentBehavior(stub.parent));\n    }\n\n    function getCurrentBehavior(stub) {\n        var behavior = stub.behaviors[stub.callCount - 1];\n        return behavior && behavior.isPresent() ? behavior : getDefaultBehavior(stub);\n    }\n\n    var uuid = 0;\n\n    sinon.extend(stub, (function () {\n        var proto = {\n            create: function create() {\n                var functionStub = function () {\n                    return getCurrentBehavior(functionStub).invoke(this, arguments);\n                };\n\n                functionStub.id = \"stub#\" + uuid++;\n                var orig = functionStub;\n                functionStub = sinon.spy.create(functionStub);\n                functionStub.func = orig;\n\n                sinon.extend(functionStub, stub);\n                functionStub._create = sinon.stub.create;\n                functionStub.displayName = \"stub\";\n                functionStub.toString = sinon.functionToString;\n\n                functionStub.defaultBehavior = null;\n                functionStub.behaviors = [];\n\n                return functionStub;\n            },\n\n            resetBehavior: function () {\n                var i;\n\n                this.defaultBehavior = null;\n                this.behaviors = [];\n\n                delete this.returnValue;\n                delete this.returnArgAt;\n                this.returnThis = false;\n\n                if (this.fakes) {\n                    for (i = 0; i < this.fakes.length; i++) {\n                        this.fakes[i].resetBehavior();\n                    }\n                }\n            },\n\n            onCall: function(index) {\n                if (!this.behaviors[index]) {\n                    this.behaviors[index] = sinon.behavior.create(this);\n                }\n\n                return this.behaviors[index];\n            },\n\n            onFirstCall: function() {\n                return this.onCall(0);\n            },\n\n            onSecondCall: function() {\n                return this.onCall(1);\n            },\n\n            onThirdCall: function() {\n                return this.onCall(2);\n            }\n        };\n\n        for (var method in sinon.behavior) {\n            if (sinon.behavior.hasOwnProperty(method) &&\n                !proto.hasOwnProperty(method) &&\n                method != 'create' &&\n                method != 'withArgs' &&\n                method != 'invoke') {\n                proto[method] = (function(behaviorMethod) {\n                    return function() {\n                        this.defaultBehavior = this.defaultBehavior || sinon.behavior.create(this);\n                        this.defaultBehavior[behaviorMethod].apply(this.defaultBehavior, arguments);\n                        return this;\n                    };\n                }(method));\n            }\n        }\n\n        return proto;\n    }()));\n\n    if (commonJSModule) {\n        module.exports = stub;\n    } else {\n        sinon.stub = stub;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/**\n * @depend ../sinon.js\n * @depend stub.js\n * @depend mock.js\n * @depend sandbox.js\n */\n/*jslint eqeqeq: false, onevar: false, forin: true, plusplus: false*/\n/*global module, require, sinon*/\n/**\n * Test function, sandboxes fakes\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon) {\n        return;\n    }\n\n    function test(callback) {\n        var type = typeof callback;\n\n        if (type != \"function\") {\n            throw new TypeError(\"sinon.test needs to wrap a test function, got \" + type);\n        }\n\n        return function () {\n            var config = sinon.getConfig(sinon.config);\n            config.injectInto = config.injectIntoThis && this || config.injectInto;\n            var sandbox = sinon.sandbox.create(config);\n            var exception, result;\n            var args = Array.prototype.slice.call(arguments).concat(sandbox.args);\n\n            try {\n                result = callback.apply(this, args);\n            } catch (e) {\n                exception = e;\n            }\n\n            if (typeof exception !== \"undefined\") {\n                sandbox.restore();\n                throw exception;\n            }\n            else {\n                sandbox.verifyAndRestore();\n            }\n\n            return result;\n        };\n    }\n\n    test.config = {\n        injectIntoThis: true,\n        injectInto: null,\n        properties: [\"spy\", \"stub\", \"mock\", \"clock\", \"server\", \"requests\"],\n        useFakeTimers: true,\n        useFakeServer: true\n    };\n\n    if (commonJSModule) {\n        module.exports = test;\n    } else {\n        sinon.test = test;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "/**\n * @depend ../sinon.js\n * @depend test.js\n */\n/*jslint eqeqeq: false, onevar: false, eqeqeq: false*/\n/*global module, require, sinon*/\n/**\n * Test case, sandboxes all test functions\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\n(function (sinon) {\n    var commonJSModule = typeof module !== 'undefined' && module.exports;\n\n    if (!sinon && commonJSModule) {\n        sinon = require(\"../sinon\");\n    }\n\n    if (!sinon || !Object.prototype.hasOwnProperty) {\n        return;\n    }\n\n    function createTest(property, setUp, tearDown) {\n        return function () {\n            if (setUp) {\n                setUp.apply(this, arguments);\n            }\n\n            var exception, result;\n\n            try {\n                result = property.apply(this, arguments);\n            } catch (e) {\n                exception = e;\n            }\n\n            if (tearDown) {\n                tearDown.apply(this, arguments);\n            }\n\n            if (exception) {\n                throw exception;\n            }\n\n            return result;\n        };\n    }\n\n    function testCase(tests, prefix) {\n        /*jsl:ignore*/\n        if (!tests || typeof tests != \"object\") {\n            throw new TypeError(\"sinon.testCase needs an object with test functions\");\n        }\n        /*jsl:end*/\n\n        prefix = prefix || \"test\";\n        var rPrefix = new RegExp(\"^\" + prefix);\n        var methods = {}, testName, property, method;\n        var setUp = tests.setUp;\n        var tearDown = tests.tearDown;\n\n        for (testName in tests) {\n            if (tests.hasOwnProperty(testName)) {\n                property = tests[testName];\n\n                if (/^(setUp|tearDown)$/.test(testName)) {\n                    continue;\n                }\n\n                if (typeof property == \"function\" && rPrefix.test(testName)) {\n                    method = property;\n\n                    if (setUp || tearDown) {\n                        method = createTest(property, setUp, tearDown);\n                    }\n\n                    methods[testName] = sinon.test(method);\n                } else {\n                    methods[testName] = tests[testName];\n                }\n            }\n        }\n\n        return methods;\n    }\n\n    if (commonJSModule) {\n        module.exports = testCase;\n    } else {\n        sinon.testCase = testCase;\n    }\n}(typeof sinon == \"object\" && sinon || null));\n",
    "(function (global){\n/*jslint eqeqeq: false, plusplus: false, evil: true, onevar: false, browser: true, forin: false*/\n/*global module, require, window*/\n/**\n * Fake timer API\n * setTimeout\n * setInterval\n * clearTimeout\n * clearInterval\n * tick\n * reset\n * Date\n *\n * Inspired by jsUnitMockTimeOut from JsUnit\n *\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2010-2013 Christian Johansen\n */\n\"use strict\";\n\nif (typeof sinon == \"undefined\") {\n    var sinon = {};\n}\n\n(function (global) {\n    // node expects setTimeout/setInterval to return a fn object w/ .ref()/.unref()\n    // browsers, a number.\n    // see https://github.com/cjohansen/Sinon.JS/pull/436\n    var timeoutResult = setTimeout(function() {}, 0);\n    var addTimerReturnsObject = typeof timeoutResult === 'object';\n    clearTimeout(timeoutResult);\n\n    var id = 1;\n\n    function addTimer(args, recurring) {\n        if (args.length === 0) {\n            throw new Error(\"Function requires at least 1 parameter\");\n        }\n\n        if (typeof args[0] === \"undefined\") {\n            throw new Error(\"Callback must be provided to timer calls\");\n        }\n\n        var toId = id++;\n        var delay = args[1] || 0;\n\n        if (!this.timeouts) {\n            this.timeouts = {};\n        }\n\n        this.timeouts[toId] = {\n            id: toId,\n            func: args[0],\n            callAt: this.now + delay,\n            invokeArgs: Array.prototype.slice.call(args, 2)\n        };\n\n        if (recurring === true) {\n            this.timeouts[toId].interval = delay;\n        }\n\n        if (addTimerReturnsObject) {\n            return {\n                id: toId,\n                ref: function() {},\n                unref: function() {}\n            };\n        }\n        else {\n            return toId;\n        }\n    }\n\n    function parseTime(str) {\n        if (!str) {\n            return 0;\n        }\n\n        var strings = str.split(\":\");\n        var l = strings.length, i = l;\n        var ms = 0, parsed;\n\n        if (l > 3 || !/^(\\d\\d:){0,2}\\d\\d?$/.test(str)) {\n            throw new Error(\"tick only understands numbers and 'h:m:s'\");\n        }\n\n        while (i--) {\n            parsed = parseInt(strings[i], 10);\n\n            if (parsed >= 60) {\n                throw new Error(\"Invalid time \" + str);\n            }\n\n            ms += parsed * Math.pow(60, (l - i - 1));\n        }\n\n        return ms * 1000;\n    }\n\n    function createObject(object) {\n        var newObject;\n\n        if (Object.create) {\n            newObject = Object.create(object);\n        } else {\n            var F = function () {};\n            F.prototype = object;\n            newObject = new F();\n        }\n\n        newObject.Date.clock = newObject;\n        return newObject;\n    }\n\n    sinon.clock = {\n        now: 0,\n\n        create: function create(now) {\n            var clock = createObject(this);\n\n            if (typeof now == \"number\") {\n                clock.now = now;\n            }\n\n            if (!!now && typeof now == \"object\") {\n                throw new TypeError(\"now should be milliseconds since UNIX epoch\");\n            }\n\n            return clock;\n        },\n\n        setTimeout: function setTimeout(callback, timeout) {\n            return addTimer.call(this, arguments, false);\n        },\n\n        clearTimeout: function clearTimeout(timerId) {\n            if (!this.timeouts) {\n                this.timeouts = [];\n            }\n\n            if (timerId in this.timeouts) {\n                delete this.timeouts[timerId];\n            }\n        },\n\n        setInterval: function setInterval(callback, timeout) {\n            return addTimer.call(this, arguments, true);\n        },\n\n        clearInterval: function clearInterval(timerId) {\n            this.clearTimeout(timerId);\n        },\n\n        setImmediate: function setImmediate(callback) {\n            var passThruArgs = Array.prototype.slice.call(arguments, 1);\n\n            return addTimer.call(this, [callback, 0].concat(passThruArgs), false);\n        },\n\n        clearImmediate: function clearImmediate(timerId) {\n            this.clearTimeout(timerId);\n        },\n\n        tick: function tick(ms) {\n            ms = typeof ms == \"number\" ? ms : parseTime(ms);\n            var tickFrom = this.now, tickTo = this.now + ms, previous = this.now;\n            var timer = this.firstTimerInRange(tickFrom, tickTo);\n\n            var firstException;\n            while (timer && tickFrom <= tickTo) {\n                if (this.timeouts[timer.id]) {\n                    tickFrom = this.now = timer.callAt;\n                    try {\n                      this.callTimer(timer);\n                    } catch (e) {\n                      firstException = firstException || e;\n                    }\n                }\n\n                timer = this.firstTimerInRange(previous, tickTo);\n                previous = tickFrom;\n            }\n\n            this.now = tickTo;\n\n            if (firstException) {\n              throw firstException;\n            }\n\n            return this.now;\n        },\n\n        firstTimerInRange: function (from, to) {\n            var timer, smallest = null, originalTimer;\n\n            for (var id in this.timeouts) {\n                if (this.timeouts.hasOwnProperty(id)) {\n                    if (this.timeouts[id].callAt < from || this.timeouts[id].callAt > to) {\n                        continue;\n                    }\n\n                    if (smallest === null || this.timeouts[id].callAt < smallest) {\n                        originalTimer = this.timeouts[id];\n                        smallest = this.timeouts[id].callAt;\n\n                        timer = {\n                            func: this.timeouts[id].func,\n                            callAt: this.timeouts[id].callAt,\n                            interval: this.timeouts[id].interval,\n                            id: this.timeouts[id].id,\n                            invokeArgs: this.timeouts[id].invokeArgs\n                        };\n                    }\n                }\n            }\n\n            return timer || null;\n        },\n\n        callTimer: function (timer) {\n            if (typeof timer.interval == \"number\") {\n                this.timeouts[timer.id].callAt += timer.interval;\n            } else {\n                delete this.timeouts[timer.id];\n            }\n\n            try {\n                if (typeof timer.func == \"function\") {\n                    timer.func.apply(null, timer.invokeArgs);\n                } else {\n                    eval(timer.func);\n                }\n            } catch (e) {\n              var exception = e;\n            }\n\n            if (!this.timeouts[timer.id]) {\n                if (exception) {\n                  throw exception;\n                }\n                return;\n            }\n\n            if (exception) {\n              throw exception;\n            }\n        },\n\n        reset: function reset() {\n            this.timeouts = {};\n        },\n\n        Date: (function () {\n            var NativeDate = Date;\n\n            function ClockDate(year, month, date, hour, minute, second, ms) {\n                // Defensive and verbose to avoid potential harm in passing\n                // explicit undefined when user does not pass argument\n                switch (arguments.length) {\n                case 0:\n                    return new NativeDate(ClockDate.clock.now);\n                case 1:\n                    return new NativeDate(year);\n                case 2:\n                    return new NativeDate(year, month);\n                case 3:\n                    return new NativeDate(year, month, date);\n                case 4:\n                    return new NativeDate(year, month, date, hour);\n                case 5:\n                    return new NativeDate(year, month, date, hour, minute);\n                case 6:\n                    return new NativeDate(year, month, date, hour, minute, second);\n                default:\n                    return new NativeDate(year, month, date, hour, minute, second, ms);\n                }\n            }\n\n            return mirrorDateProperties(ClockDate, NativeDate);\n        }())\n    };\n\n    function mirrorDateProperties(target, source) {\n        if (source.now) {\n            target.now = function now() {\n                return target.clock.now;\n            };\n        } else {\n            delete target.now;\n        }\n\n        if (source.toSource) {\n            target.toSource = function toSource() {\n                return source.toSource();\n            };\n        } else {\n            delete target.toSource;\n        }\n\n        target.toString = function toString() {\n            return source.toString();\n        };\n\n        target.prototype = source.prototype;\n        target.parse = source.parse;\n        target.UTC = source.UTC;\n        target.prototype.toUTCString = source.prototype.toUTCString;\n\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n\n        return target;\n    }\n\n    var methods = [\"Date\", \"setTimeout\", \"setInterval\",\n                   \"clearTimeout\", \"clearInterval\"];\n\n    if (typeof global.setImmediate !== \"undefined\") {\n        methods.push(\"setImmediate\");\n    }\n\n    if (typeof global.clearImmediate !== \"undefined\") {\n        methods.push(\"clearImmediate\");\n    }\n\n    function restore() {\n        var method;\n\n        for (var i = 0, l = this.methods.length; i < l; i++) {\n            method = this.methods[i];\n\n            if (global[method].hadOwnProperty) {\n                global[method] = this[\"_\" + method];\n            } else {\n                try {\n                    delete global[method];\n                } catch (e) {}\n            }\n        }\n\n        // Prevent multiple executions which will completely remove these props\n        this.methods = [];\n    }\n\n    function stubGlobal(method, clock) {\n        clock[method].hadOwnProperty = Object.prototype.hasOwnProperty.call(global, method);\n        clock[\"_\" + method] = global[method];\n\n        if (method == \"Date\") {\n            var date = mirrorDateProperties(clock[method], global[method]);\n            global[method] = date;\n        } else {\n            global[method] = function () {\n                return clock[method].apply(clock, arguments);\n            };\n\n            for (var prop in clock[method]) {\n                if (clock[method].hasOwnProperty(prop)) {\n                    global[method][prop] = clock[method][prop];\n                }\n            }\n        }\n\n        global[method].clock = clock;\n    }\n\n    sinon.useFakeTimers = function useFakeTimers(now) {\n        var clock = sinon.clock.create(now);\n        clock.restore = restore;\n        clock.methods = Array.prototype.slice.call(arguments,\n                                                   typeof now == \"number\" ? 1 : 0);\n\n        if (clock.methods.length === 0) {\n            clock.methods = methods;\n        }\n\n        for (var i = 0, l = clock.methods.length; i < l; i++) {\n            stubGlobal(clock.methods[i], clock);\n        }\n\n        return clock;\n    };\n}(typeof global != \"undefined\" && typeof global !== \"function\" ? global : this));\n\nsinon.timers = {\n    setTimeout: setTimeout,\n    clearTimeout: clearTimeout,\n    setImmediate: (typeof setImmediate !== \"undefined\" ? setImmediate : undefined),\n    clearImmediate: (typeof clearImmediate !== \"undefined\" ? clearImmediate: undefined),\n    setInterval: setInterval,\n    clearInterval: clearInterval,\n    Date: Date\n};\n\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = sinon;\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "(function (global){\n((typeof define === \"function\" && define.amd && function (m) {\n    define(\"formatio\", [\"samsam\"], m);\n}) || (typeof module === \"object\" && function (m) {\n    module.exports = m(require(\"samsam\"));\n}) || function (m) { this.formatio = m(this.samsam); }\n)(function (samsam) {\n    \"use strict\";\n\n    var formatio = {\n        excludeConstructors: [\"Object\", /^.$/],\n        quoteStrings: true\n    };\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    var specialObjects = [];\n    if (typeof global !== \"undefined\") {\n        specialObjects.push({ object: global, value: \"[object global]\" });\n    }\n    if (typeof document !== \"undefined\") {\n        specialObjects.push({\n            object: document,\n            value: \"[object HTMLDocument]\"\n        });\n    }\n    if (typeof window !== \"undefined\") {\n        specialObjects.push({ object: window, value: \"[object Window]\" });\n    }\n\n    function functionName(func) {\n        if (!func) { return \"\"; }\n        if (func.displayName) { return func.displayName; }\n        if (func.name) { return func.name; }\n        var matches = func.toString().match(/function\\s+([^\\(]+)/m);\n        return (matches && matches[1]) || \"\";\n    }\n\n    function constructorName(f, object) {\n        var name = functionName(object && object.constructor);\n        var excludes = f.excludeConstructors ||\n                formatio.excludeConstructors || [];\n\n        var i, l;\n        for (i = 0, l = excludes.length; i < l; ++i) {\n            if (typeof excludes[i] === \"string\" && excludes[i] === name) {\n                return \"\";\n            } else if (excludes[i].test && excludes[i].test(name)) {\n                return \"\";\n            }\n        }\n\n        return name;\n    }\n\n    function isCircular(object, objects) {\n        if (typeof object !== \"object\") { return false; }\n        var i, l;\n        for (i = 0, l = objects.length; i < l; ++i) {\n            if (objects[i] === object) { return true; }\n        }\n        return false;\n    }\n\n    function ascii(f, object, processed, indent) {\n        if (typeof object === \"string\") {\n            var qs = f.quoteStrings;\n            var quote = typeof qs !== \"boolean\" || qs;\n            return processed || quote ? '\"' + object + '\"' : object;\n        }\n\n        if (typeof object === \"function\" && !(object instanceof RegExp)) {\n            return ascii.func(object);\n        }\n\n        processed = processed || [];\n\n        if (isCircular(object, processed)) { return \"[Circular]\"; }\n\n        if (Object.prototype.toString.call(object) === \"[object Array]\") {\n            return ascii.array.call(f, object, processed);\n        }\n\n        if (!object) { return String((1/object) === -Infinity ? \"-0\" : object); }\n        if (samsam.isElement(object)) { return ascii.element(object); }\n\n        if (typeof object.toString === \"function\" &&\n                object.toString !== Object.prototype.toString) {\n            return object.toString();\n        }\n\n        var i, l;\n        for (i = 0, l = specialObjects.length; i < l; i++) {\n            if (object === specialObjects[i].object) {\n                return specialObjects[i].value;\n            }\n        }\n\n        return ascii.object.call(f, object, processed, indent);\n    }\n\n    ascii.func = function (func) {\n        return \"function \" + functionName(func) + \"() {}\";\n    };\n\n    ascii.array = function (array, processed) {\n        processed = processed || [];\n        processed.push(array);\n        var i, l, pieces = [];\n        for (i = 0, l = array.length; i < l; ++i) {\n            pieces.push(ascii(this, array[i], processed));\n        }\n        return \"[\" + pieces.join(\", \") + \"]\";\n    };\n\n    ascii.object = function (object, processed, indent) {\n        processed = processed || [];\n        processed.push(object);\n        indent = indent || 0;\n        var pieces = [], properties = samsam.keys(object).sort();\n        var length = 3;\n        var prop, str, obj, i, l;\n\n        for (i = 0, l = properties.length; i < l; ++i) {\n            prop = properties[i];\n            obj = object[prop];\n\n            if (isCircular(obj, processed)) {\n                str = \"[Circular]\";\n            } else {\n                str = ascii(this, obj, processed, indent + 2);\n            }\n\n            str = (/\\s/.test(prop) ? '\"' + prop + '\"' : prop) + \": \" + str;\n            length += str.length;\n            pieces.push(str);\n        }\n\n        var cons = constructorName(this, object);\n        var prefix = cons ? \"[\" + cons + \"] \" : \"\";\n        var is = \"\";\n        for (i = 0, l = indent; i < l; ++i) { is += \" \"; }\n\n        if (length + indent > 80) {\n            return prefix + \"{\\n  \" + is + pieces.join(\",\\n  \" + is) + \"\\n\" +\n                is + \"}\";\n        }\n        return prefix + \"{ \" + pieces.join(\", \") + \" }\";\n    };\n\n    ascii.element = function (element) {\n        var tagName = element.tagName.toLowerCase();\n        var attrs = element.attributes, attr, pairs = [], attrName, i, l, val;\n\n        for (i = 0, l = attrs.length; i < l; ++i) {\n            attr = attrs.item(i);\n            attrName = attr.nodeName.toLowerCase().replace(\"html:\", \"\");\n            val = attr.nodeValue;\n            if (attrName !== \"contenteditable\" || val !== \"inherit\") {\n                if (!!val) { pairs.push(attrName + \"=\\\"\" + val + \"\\\"\"); }\n            }\n        }\n\n        var formatted = \"<\" + tagName + (pairs.length > 0 ? \" \" : \"\");\n        var content = element.innerHTML;\n\n        if (content.length > 20) {\n            content = content.substr(0, 20) + \"[...]\";\n        }\n\n        var res = formatted + pairs.join(\" \") + \">\" + content +\n                \"</\" + tagName + \">\";\n\n        return res.replace(/ contentEditable=\"inherit\"/, \"\");\n    };\n\n    function Formatio(options) {\n        for (var opt in options) {\n            this[opt] = options[opt];\n        }\n    }\n\n    Formatio.prototype = {\n        functionName: functionName,\n\n        configure: function (options) {\n            return new Formatio(options);\n        },\n\n        constructorName: function (object) {\n            return constructorName(this, object);\n        },\n\n        ascii: function (object, processed, indent) {\n            return ascii(this, object, processed, indent);\n        }\n    };\n\n    return Formatio.prototype;\n});\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "((typeof define === \"function\" && define.amd && function (m) { define(\"samsam\", m); }) ||\n (typeof module === \"object\" &&\n      function (m) { module.exports = m(); }) || // Node\n function (m) { this.samsam = m(); } // Browser globals\n)(function () {\n    var o = Object.prototype;\n    var div = typeof document !== \"undefined\" && document.createElement(\"div\");\n\n    function isNaN(value) {\n        // Unlike global isNaN, this avoids type coercion\n        // typeof check avoids IE host object issues, hat tip to\n        // lodash\n        var val = value; // JsLint thinks value !== value is \"weird\"\n        return typeof value === \"number\" && value !== val;\n    }\n\n    function getClass(value) {\n        // Returns the internal [[Class]] by calling Object.prototype.toString\n        // with the provided value as this. Return value is a string, naming the\n        // internal class, e.g. \"Array\"\n        return o.toString.call(value).split(/[ \\]]/)[1];\n    }\n\n    /**\n     * @name samsam.isArguments\n     * @param Object object\n     *\n     * Returns ``true`` if ``object`` is an ``arguments`` object,\n     * ``false`` otherwise.\n     */\n    function isArguments(object) {\n        if (getClass(object) === 'Arguments') { return true; }\n        if (typeof object !== \"object\" || typeof object.length !== \"number\" ||\n                getClass(object) === \"Array\") {\n            return false;\n        }\n        if (typeof object.callee == \"function\") { return true; }\n        try {\n            object[object.length] = 6;\n            delete object[object.length];\n        } catch (e) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @name samsam.isElement\n     * @param Object object\n     *\n     * Returns ``true`` if ``object`` is a DOM element node. Unlike\n     * Underscore.js/lodash, this function will return ``false`` if ``object``\n     * is an *element-like* object, i.e. a regular object with a ``nodeType``\n     * property that holds the value ``1``.\n     */\n    function isElement(object) {\n        if (!object || object.nodeType !== 1 || !div) { return false; }\n        try {\n            object.appendChild(div);\n            object.removeChild(div);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @name samsam.keys\n     * @param Object object\n     *\n     * Return an array of own property names.\n     */\n    function keys(object) {\n        var ks = [], prop;\n        for (prop in object) {\n            if (o.hasOwnProperty.call(object, prop)) { ks.push(prop); }\n        }\n        return ks;\n    }\n\n    /**\n     * @name samsam.isDate\n     * @param Object value\n     *\n     * Returns true if the object is a ``Date``, or *date-like*. Duck typing\n     * of date objects work by checking that the object has a ``getTime``\n     * function whose return value equals the return value from the object's\n     * ``valueOf``.\n     */\n    function isDate(value) {\n        return typeof value.getTime == \"function\" &&\n            value.getTime() == value.valueOf();\n    }\n\n    /**\n     * @name samsam.isNegZero\n     * @param Object value\n     *\n     * Returns ``true`` if ``value`` is ``-0``.\n     */\n    function isNegZero(value) {\n        return value === 0 && 1 / value === -Infinity;\n    }\n\n    /**\n     * @name samsam.equal\n     * @param Object obj1\n     * @param Object obj2\n     *\n     * Returns ``true`` if two objects are strictly equal. Compared to\n     * ``===`` there are two exceptions:\n     *\n     *   - NaN is considered equal to NaN\n     *   - -0 and +0 are not considered equal\n     */\n    function identical(obj1, obj2) {\n        if (obj1 === obj2 || (isNaN(obj1) && isNaN(obj2))) {\n            return obj1 !== 0 || isNegZero(obj1) === isNegZero(obj2);\n        }\n    }\n\n\n    /**\n     * @name samsam.deepEqual\n     * @param Object obj1\n     * @param Object obj2\n     *\n     * Deep equal comparison. Two values are \"deep equal\" if:\n     *\n     *   - They are equal, according to samsam.identical\n     *   - They are both date objects representing the same time\n     *   - They are both arrays containing elements that are all deepEqual\n     *   - They are objects with the same set of properties, and each property\n     *     in ``obj1`` is deepEqual to the corresponding property in ``obj2``\n     *\n     * Supports cyclic objects.\n     */\n    function deepEqualCyclic(obj1, obj2) {\n\n        // used for cyclic comparison\n        // contain already visited objects\n        var objects1 = [],\n            objects2 = [],\n        // contain pathes (position in the object structure)\n        // of the already visited objects\n        // indexes same as in objects arrays\n            paths1 = [],\n            paths2 = [],\n        // contains combinations of already compared objects\n        // in the manner: { \"$1['ref']$2['ref']\": true }\n            compared = {};\n\n        /**\n         * used to check, if the value of a property is an object\n         * (cyclic logic is only needed for objects)\n         * only needed for cyclic logic\n         */\n        function isObject(value) {\n\n            if (typeof value === 'object' && value !== null &&\n                    !(value instanceof Boolean) &&\n                    !(value instanceof Date)    &&\n                    !(value instanceof Number)  &&\n                    !(value instanceof RegExp)  &&\n                    !(value instanceof String)) {\n\n                return true;\n            }\n\n            return false;\n        }\n\n        /**\n         * returns the index of the given object in the\n         * given objects array, -1 if not contained\n         * only needed for cyclic logic\n         */\n        function getIndex(objects, obj) {\n\n            var i;\n            for (i = 0; i < objects.length; i++) {\n                if (objects[i] === obj) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        // does the recursion for the deep equal check\n        return (function deepEqual(obj1, obj2, path1, path2) {\n            var type1 = typeof obj1;\n            var type2 = typeof obj2;\n\n            // == null also matches undefined\n            if (obj1 === obj2 ||\n                    isNaN(obj1) || isNaN(obj2) ||\n                    obj1 == null || obj2 == null ||\n                    type1 !== \"object\" || type2 !== \"object\") {\n\n                return identical(obj1, obj2);\n            }\n\n            // Elements are only equal if identical(expected, actual)\n            if (isElement(obj1) || isElement(obj2)) { return false; }\n\n            var isDate1 = isDate(obj1), isDate2 = isDate(obj2);\n            if (isDate1 || isDate2) {\n                if (!isDate1 || !isDate2 || obj1.getTime() !== obj2.getTime()) {\n                    return false;\n                }\n            }\n\n            if (obj1 instanceof RegExp && obj2 instanceof RegExp) {\n                if (obj1.toString() !== obj2.toString()) { return false; }\n            }\n\n            var class1 = getClass(obj1);\n            var class2 = getClass(obj2);\n            var keys1 = keys(obj1);\n            var keys2 = keys(obj2);\n\n            if (isArguments(obj1) || isArguments(obj2)) {\n                if (obj1.length !== obj2.length) { return false; }\n            } else {\n                if (type1 !== type2 || class1 !== class2 ||\n                        keys1.length !== keys2.length) {\n                    return false;\n                }\n            }\n\n            var key, i, l,\n                // following vars are used for the cyclic logic\n                value1, value2,\n                isObject1, isObject2,\n                index1, index2,\n                newPath1, newPath2;\n\n            for (i = 0, l = keys1.length; i < l; i++) {\n                key = keys1[i];\n                if (!o.hasOwnProperty.call(obj2, key)) {\n                    return false;\n                }\n\n                // Start of the cyclic logic\n\n                value1 = obj1[key];\n                value2 = obj2[key];\n\n                isObject1 = isObject(value1);\n                isObject2 = isObject(value2);\n\n                // determine, if the objects were already visited\n                // (it's faster to check for isObject first, than to\n                // get -1 from getIndex for non objects)\n                index1 = isObject1 ? getIndex(objects1, value1) : -1;\n                index2 = isObject2 ? getIndex(objects2, value2) : -1;\n\n                // determine the new pathes of the objects\n                // - for non cyclic objects the current path will be extended\n                //   by current property name\n                // - for cyclic objects the stored path is taken\n                newPath1 = index1 !== -1\n                    ? paths1[index1]\n                    : path1 + '[' + JSON.stringify(key) + ']';\n                newPath2 = index2 !== -1\n                    ? paths2[index2]\n                    : path2 + '[' + JSON.stringify(key) + ']';\n\n                // stop recursion if current objects are already compared\n                if (compared[newPath1 + newPath2]) {\n                    return true;\n                }\n\n                // remember the current objects and their pathes\n                if (index1 === -1 && isObject1) {\n                    objects1.push(value1);\n                    paths1.push(newPath1);\n                }\n                if (index2 === -1 && isObject2) {\n                    objects2.push(value2);\n                    paths2.push(newPath2);\n                }\n\n                // remember that the current objects are already compared\n                if (isObject1 && isObject2) {\n                    compared[newPath1 + newPath2] = true;\n                }\n\n                // End of cyclic logic\n\n                // neither value1 nor value2 is a cycle\n                // continue with next level\n                if (!deepEqual(value1, value2, newPath1, newPath2)) {\n                    return false;\n                }\n            }\n\n            return true;\n\n        }(obj1, obj2, '$1', '$2'));\n    }\n\n    var match;\n\n    function arrayContains(array, subset) {\n        if (subset.length === 0) { return true; }\n        var i, l, j, k;\n        for (i = 0, l = array.length; i < l; ++i) {\n            if (match(array[i], subset[0])) {\n                for (j = 0, k = subset.length; j < k; ++j) {\n                    if (!match(array[i + j], subset[j])) { return false; }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @name samsam.match\n     * @param Object object\n     * @param Object matcher\n     *\n     * Compare arbitrary value ``object`` with matcher.\n     */\n    match = function match(object, matcher) {\n        if (matcher && typeof matcher.test === \"function\") {\n            return matcher.test(object);\n        }\n\n        if (typeof matcher === \"function\") {\n            return matcher(object) === true;\n        }\n\n        if (typeof matcher === \"string\") {\n            matcher = matcher.toLowerCase();\n            var notNull = typeof object === \"string\" || !!object;\n            return notNull &&\n                (String(object)).toLowerCase().indexOf(matcher) >= 0;\n        }\n\n        if (typeof matcher === \"number\") {\n            return matcher === object;\n        }\n\n        if (typeof matcher === \"boolean\") {\n            return matcher === object;\n        }\n\n        if (getClass(object) === \"Array\" && getClass(matcher) === \"Array\") {\n            return arrayContains(object, matcher);\n        }\n\n        if (matcher && typeof matcher === \"object\") {\n            var prop;\n            for (prop in matcher) {\n                var value = object[prop];\n                if (typeof value === \"undefined\" &&\n                        typeof object.getAttribute === \"function\") {\n                    value = object.getAttribute(prop);\n                }\n                if (typeof value === \"undefined\" || !match(value, matcher[prop])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        throw new Error(\"Matcher was not a string, a number, a \" +\n                        \"function, a boolean or an object\");\n    };\n\n    return {\n        isArguments: isArguments,\n        isElement: isElement,\n        isDate: isDate,\n        isNegZero: isNegZero,\n        identical: identical,\n        deepEqual: deepEqualCyclic,\n        match: match,\n        keys: keys\n    };\n});\n",
    "gunray = require('gunray')\ncollection = gunray.collection\nisCollection = gunray.isCollection\ncoll = null\n\nQUnit.module \"Gunray Collection\",\n  setup: ->\n    coll = collection([\n      firstName: 'first'\n      lastName:  'last'\n    ])\n  teardown: ->\n\naddItem = (item=firstName: 'Charley', lastName: 'Patton') ->\n  coll.add(item)\n\ntest 'creates collection', 3, ->\n  notEqual coll, undefined\n  notEqual coll, null\n  ok isCollection(coll)\n\ntest 'provides length', 1, ->\n  equal coll.length(), 1\n\ntest 'add items', ->\n  addItem()\n  equal coll.length(), 2\n\ntest 'first and rest', 2, ->\n  equal coll.first().get('firstName'), 'first'\n  deepEqual coll.rest(), []\n\ntest 'last', 1, ->\n  deepEqual coll.first(), coll.last()\n\ntest 'add items updates index', 2, ->\n  addItem()\n  equal coll.first().index(), 0\n  equal coll.last().index(), 1\n\ntest 'observes collection', 3, ->\n  coll.bind (obj, event) ->\n    equal obj.get('firstName'), 'Charley'\n    equal event, 'add'\n\n  addItem()\n\n  equal coll.length(), 2\n\ntest 'observes collection event', 2, ->\n  coll.bind(add: (obj) ->\n    equal obj.get('firstName'), 'Charley'\n  )\n  coll.bind(remove: -> ok false)\n  addItem()\n\n  equal coll.length(), 2\n\ntest 'removes collection binding', 1, ->\n  unbind = coll.bind -> ok true\n  coll.add firstName: 'foo', lastName: 'bar'\n  unbind()\n  coll.add firstName: 'fizz', lastName: 'buzz'\n\ntest 'observes collection property event', 3, ->\n  coll.bind 'add:firstName': (name, obj) ->\n    equal name, 'Charley'\n    equal obj.get('lastName'), 'Patton'\n\n  coll.bind 'add:notAProperty': -> ok false\n\n  addItem()\n\n  equal coll.length(), 2\n\ntest 'allows index access', 1, ->\n  first = coll.at(0)\n  equal first.get(\"firstName\"), 'first'\n\ntest 'provides item indices', 2, ->\n  addItem()\n  equal coll.at(0).index(), 0\n  equal coll.at(1).index(), 1\n\ntest 'observes collection change', 4, ->\n  coll.bind('update:firstName': (name, obj, event, previous) ->\n    equal name, 'George'\n    equal event, 'update'\n    equal obj.get('firstName'), 'George'\n    equal previous, 'first', 'Charley')\n  coll.at(0).set('firstName', 'George')\n\ntest 'provides forEach function', 4, ->\n  addItem()\n  index = 0\n  coll.each (obj, i) ->\n    equal i, index\n    equal coll.at(i).get('firstName'), obj.get('firstName')\n    index++\n\ntest 'provides find function', 2, ->\n  addItem()\n  addItem(firstName: 'notit', lastName: 'last')\n  result = coll.find (x) -> x.get('lastName') is 'Patton'\n  equal result.get('firstName'), 'Charley'\n  result = coll.find (x) -> x.get('lastName') is 'last'\n  equal result.get('firstName'), 'first'\n\ntest 'provides map function', 6, ->\n  addItem()\n  index = 0\n  result = coll.map (obj, i) ->\n    equal i, index\n    equal coll.at(i).get('firstName'), obj.get('firstName')\n    index++\n  equal result.at(0)(), 0\n  equal result.at(1)(), 1\n\ntest 'provides reduce function', 2, ->\n  addItem()\n  result = coll.reduce [], (coll, val) ->\n    coll.push val.get('firstName')\n    coll\n  equal result[0], 'first'\n  equal result[1], 'Charley'\n\ntest 'allows integer access', 1, ->\n  equal coll.at(0).get('firstName'), 'first'\n\ntest 'removes by index', 3, ->\n  addItem()\n  equal coll.length(), 2\n  coll.removeAt(0)\n  equal coll.length(), 1\n  equal coll.at(0).index(), 0\n\ntest 'removes by identity', 1, ->\n  coll.remove(coll.at(0))\n  equal coll.length(), 0\n\ntest 'observes collection remove', 3, ->\n  coll.bind((obj, event) ->\n    equal obj.get('firstName'), 'first'\n    equal event, 'remove'\n  )\n  coll.bind(remove: (obj) ->\n    equal obj.get('firstName'), 'first'\n  )\n  coll.removeAt(0)\n\ntest 'can selected element by index', 2, ->\n  addItem()\n  coll.selectAt(0)\n  equal coll.selectedIndex(), 0\n  deepEqual coll.selected(), coll.at(0)\n\ntest 'can selected element by identity', 2, ->\n  addItem()\n  coll.selected(coll.at(1))\n  equal coll.selectedIndex(), 1\n  deepEqual coll.selected(), coll.at(1)\n\ntest 'can be notified when selected element changes', 2, ->\n  coll.selected (object, index) ->\n    deepEqual object, coll.at(0)\n    equal index, 0\n  coll.selectAt(0)\n\ntest 'can bind selected', 3, ->\n  addItem()\n  coll.selectAt(0)\n  coll.bind select: (object, event, previous) ->\n    deepEqual previous, coll.at(0)\n    deepEqual object, coll.at(1)\n    equal event, 'select'\n  coll.selectAt(1)\n",
    "gunray = require 'gunray'\n\nh = require '../helpers.coffee'\n\ncomponent = gunray.component\nisComponent = gunray.isComponent\n\ncollection = gunray.collection\nobject = gunray.object\nhtml = gunray.html\n\ncmp = null\n\nQUnit.module \"Gunray.Component\",\n  setup: ->\n  teardown: ->\n\ntest 'can be created', ->\n  cmp = component()\n  ok isComponent cmp\n\ntest 'can be assigned state', ->\n  state = object(nums: [1,2,3])\n  cmp = component(state: state)\n  deepEqual cmp.state(), state\n\ntest 'can be assigned a dom/html element', ->\n  view = html([\"h1\", \"some content\"])\n  cmp = component(html: view)\n  h.equalHtml cmp.html(), '<h1>some content</h1>'\n\ntest 'can be assigned a dom/html deferred element', ->\n  cmp = component(\n    state: object(name: 'myComponent')\n    html: (state) ->\n      [\"h1\", \"some content #{state.get('name')}\"]\n  )\n  h.equalHtml cmp.html(), '<h1>some content myComponent</h1>'\n\n# test 'can be nested', ->\n#   innerCmp = (state) ->\n#     component(\n#       state: object(state)\n#       html: (state) ->\n#         [\"li\", state.get('name')]\n#     )\n\n#   outerCmp = component(\n#     state: object(items: [{name: 'foo'}, {name: 'bar'}])\n#     html: (state) ->\n#       ['ul', state.get('items').map((item) -> innerCmp(item))]\n#   )\n\n#   h.equalHtml outerCmp.html(), '<ul><li>foo</li><li>bar</li></ul>'\n\n# test 'can handle dom events', 1, ->\n#   view = html([\"h1\", \"some content\"])\n#   cmp = component(html: view)\n#   cmp.click (event, cmp) ->\n#     deepEqual event.target, cmp.html().dom\n#   sim.click cmp.html().dom\n\n# test 'can interact with the router', 1, ->\n#   location = new Location('http://www.example.com')\n#   hist = history(location: location, pushState: ->)\n\n#   parent = document.createElement('div')\n#   parent.id = 'foo'\n#   document.appendChild parent\n\n#   pagesCmp = component(\n#     container: parent\n#     collection: collection({name: 'foo'}, {name: 'bar'})\n#     html: (cmp) ->\n#       [\n#         [\"ul\", (cmp.collection().html selected: (item) ->\n#             [\"li\", item.prop('name')]\n#           ), [\"li#items\"]\n#         ]\n#       ]\n\n#   itemsCmp = component(\n#     parent: pagesCmp\n#     container: \"li#items\"\n#     collection: collection({name: 'fizz'}, {name: 'buzz'})\n#     html: (cmp) ->\n#       [\"ul\", cmp.collection().html selected: (item) ->\n#         [\"li\", item.prop('name')]\n#       ]\n\n#   router.map ->\n#     @route 'pages/:name', pagesCmp, ->\n#       @route 'items/:name', itemsCmp\n\n#   hist.start()\n\n#   hist.navigate(\"page/foo\")\n\n#   equalHtml dom: parent,\n#     '<ul><li>foo</li><li id=\"items\"></li></ul>'\n\n#   hist.navigate(\"page/foo/items/fizz\")\n\n#   equalHtml dom: parent,\n#     '<ul><li>foo</li><li id=\"items\">' +\n#     '<ul><li>fizz</li></ul></li></ul>'\n\n#   hist.navigate(\"page/bar/items/fizz\")\n\n#   equalHtml dom: parent,\n#     '<ul><li>bar</li><li id=\"items\">' +\n#     '<ul><li>fizz</li></ul></li></ul>'\n\n#   document.removeChild parent\n",
    "gunray = require 'gunray'\nobject = gunray.object\nisObject = gunray.isObject\n\no = null\n\nQUnit.module \"Gunray Object\",\n  setup: ->\n    o = object(\n      isAdmin:   false\n      lastName:  'last'\n      firstName: 'first'\n      createdAt: new Date('Wed Oct 25, 2001')\n      child:\n        name: 'gerald'\n        location:\n          zip: '60640'\n      children: [\n        { name: 'dorothy' }\n        { name: 'marvin' }\n        { name: 'friedrich' }\n        { name: 'jens' }\n      ]\n    )\n  teardown: -> o = null\n\ntest 'creates object', 3, ->\n  notEqual o, undefined\n  notEqual o, null\n  ok isObject(o)\n\ntest 'creates properties', 2, ->\n  equal o.get('firstName'), 'first'\n  equal o.prop('firstName')(), 'first'\n\ntest 'creates nested properties', 4, ->\n  equal o.get('child.name'), 'gerald'\n  equal o.prop('child.name')(), 'gerald'\n  equal o.get('child.location.zip'), '60640'\n  equal o.prop('child.location.zip')(), '60640'\n\ntest 'sets properties', 2, ->\n  o.set 'firstName', 'newFirst'\n\n  equal o.get('firstName'), 'newFirst'\n  equal o.prop('firstName')(), 'newFirst'\n\ntest 'sets multiple properties', 2, ->\n  o.set firstName: 'newFirst', lastName: 'newLast'\n\n  equal o.get('firstName'), 'newFirst'\n  equal o.get('lastName'), 'newLast'\n\ntest 'sets nested properties', 2, ->\n  o.set 'child.name', 'fitzgerald'\n\n  equal o.get('child.name'), 'fitzgerald'\n  equal o.prop('child.name')(), 'fitzgerald'\n\ntest 'bind events for object', 2, ->\n  o.bind (model) -> deepEqual o, model\n  o.bind (model) -> deepEqual o, model\n  o.set 'firstName', 'Harold'\n\ntest 'remove bindings for object', 1, ->\n  unbind = o.bind (model) -> ok true\n  o.set 'firstName', 'foo'\n  unbind()\n  o.set 'firstName', 'bar'\n\ntest 'bindings fire only when property changed', 1, ->\n  counter = 0\n  o.bind (model) -> counter++\n  o.set 'firstName', 'Dottie'\n  o.set 'firstName', 'Dottie'\n  o.set 'firstName', 'Louis'\n  equal counter, 2\n\ntest 'bindings for specific events', 1, ->\n  o.bind update: -> ok true\n  o.set 'lastName', 'Washington'\n\ntest 'bindings for specific properties and events', 1, ->\n  o.bind 'notAnEvent:firstName': -> ok false\n  o.bind 'update:lastName': -> ok true\n  o.set 'lastName', 'Washington'\n\ntest 'bindings for nested properties', 1, ->\n  o.bind 'update:child.name': -> ok true\n  o.set 'child.name', 'Gerald'\n\ntest 'bindings provide access to current, previous values and the object', 4, ->\n  o.bind 'update:firstName': (firstName, object, event, previous) ->\n    equal previous, 'first'\n    equal event, 'update'\n    deepEqual object, o\n    equal firstName, 'Fitzgerald'\n\n  o.set 'firstName', 'Fitzgerald'\n\ntest 'gets collection values', ->\n  equal o.get('children.at(0).name'), 'dorothy'\n\ntest 'sets collection values', ->\n  o.set('children.at(0).name', 'toto')\n  equal o.get(\"children.at(0).name\"), 'toto'\n",
    "_ = require 'lodash'\ngunray = require 'gunray'\nprop = gunray.property\nisProperty = gunray.isProperty\n\nupdated = r1 = r2 = r3 = p = p2 = null\n\nQUnit.module \"Gunray Property\",\n  setup: ->\n    updated = 0\n    p = prop()\n    p2 = prop()\n    [r1, r2]  = _.times 2, Math.random\n  teardown: ->\n\ntest 'is created', 2, ->\n  equal isProperty(p), true\n  ok _.isFunction(p)\n\ntest 'can be initialized with value', 2, ->\n  initializedProp = prop(\"foo\")\n  equal isProperty(initializedProp), true\n  equal initializedProp(), \"foo\"\n\ntest 'can be updated', 2, ->\n  p(r1)\n  p2(r2)\n  equal p(), r1\n  equal p2(), r2\n\ntest 'binds observers', 2, ->\n  p (val) ->\n    equal val, r1\n    ok true\n\n  p2 (val) -> ok false\n\n  p(r1)\n\ntest 'supplies previous value to observers', 2, ->\n  p(r1)\n\n  p (val, old) ->\n    equal val, r2\n    equal old, r1\n\n  p(r2)\n\ntest 'removes bindings', 2, ->\n  p (val) ->\n    equal val, r1\n    ok true\n\n  unbind = p2 (val) -> ok false\n\n  unbind()\n\n  p(r1)\n  p2(r2)\n",
    "gunray = require 'gunray'\nh = require '../helpers.coffee'\nroute = gunray.route\nrouter = gunray.router\nproperty = gunray.property\nobservable = gunray.observable\ncollection = gunray.collection\nhistory = gunray.history\n\nhist = location = null\n\nQUnit.module \"Gunray Router\",\n  setup:  ->\n    location = new h.Location('http://www.example.com')\n    hist = history(location: location, pushState: ->)\n\n  teardown: ->\n    lastRoute = lastArgs = null\n    router.reset()\n\ntest \"initialize\", 1, ->\n  equal router.history.location, location\n\ntest \"routes\", 2, ->\n  page = (route) ->\n    equal route, 'page'\n\n  router.map ->\n    @route 'page', page\n\n  location.replace 'http://example.com/page'\n  hist.checkUrl()\n\n  equal router.path(), 'page'\n\ntest \"nested routes\", 3, ->\n  page = (route) ->\n    equal route, 'page'\n\n  subpage = (route) ->\n    equal route, 'subpage'\n\n  notRun = -> ok false\n\n  router.map ->\n    @route 'page', page, ->\n      @route 'subpage', subpage\n    @route 'subpage', notRun\n\n  location.replace 'http://example.com/page/subpage'\n\n  hist.checkUrl()\n\n  equal router.path(), 'page/subpage'\n\ntest \"collection route\", 8, ->\n  person = (route) ->\n    equal route, 'person'\n\n  collIdRoute = (id, item) ->\n    equal id, 1\n    equal item, coll.first()\n\n  collNameRoute = (name, item) ->\n    equal name, 'Dan'\n    equal item, coll.last()\n\n  coll = collection([\n    {id: 1, name: 'Betty', category: 'Foo'},\n    {id: 2, name: 'Dan',   category: 'Foo'}\n  ])\n\n  router.map ->\n    @route 'person', person, ->\n      @route ':id', collIdRoute, coll\n      @route ':name', collNameRoute, coll\n\n  location.replace 'http://www.example.com/person/1'\n\n  hist.checkUrl()\n\n  equal router.path(), 'person/1'\n\n  location.replace 'http://www.example.com/person/Dan'\n\n  hist.checkUrl()\n\n  equal router.path(), 'person/Dan'\n\ntest \"history#navigate does nothing if not started\", 1, ->\n  location.replace 'http://www.example.com/foo'\n  hist.navigate '/page'\n  equal location.href, 'http://www.example.com/foo'\n\ntest \"history#navigate without pushState\", 3, ->\n  page = (route) -> equal route, 'page'\n\n  router.map -> @route 'page', page\n\n  hist.start()\n  hist.navigate '/page'\n\n  equal location.href, 'http://www.example.com/page'\n  equal router.path(), 'page'\n\ntest \"history#navigate with pushState\", 2, ->\n  pushState = (state, title, path) ->\n    equal title, document.title\n    equal path, '/foobar'\n\n  hist = history(location: location, pushState: pushState)\n\n  hist.start(pushState: true)\n\n  hist.navigate \"/foobar\"\n",
    "gunray = require 'gunray'\n\nh = require '../helpers.coffee'\nsim = require 'simulate'\nsinon = require 'sinon'\n_ = require 'lodash'\n\nhtml = gunray.html\nisHtml = gunray.isHtml\n\nproperty = gunray.property\nobject = gunray.object\ncollection = gunray.collection\ncomputed = gunray.computed\n\ndomDiv = null\n\nQUnit.module \"Gunray Template\",\n  setup: ->\n    domDiv = document.createElement('div')\n    document.body.appendChild domDiv\n  teardown: ->\n    document.body.removeChild domDiv\n    domDiv = null\n\ntest 'creates template', 3, ->\n  t = html(['p'])\n  notEqual t, undefined\n  notEqual t, null\n  ok isHtml(t)\n\ntest 'simple', 4, ->\n  h1 = html(['h1'])\n  equal h1.children.length, 0\n  h.equalHtml h1, '<h1></h1>'\n  h1hello = html(['h1', 'hello world'])\n  equal h1hello.children.length, 0\n  h.equalHtml h1hello, '<h1>hello world</h1>'\n\ntest 'nested', 4, ->\n  div = html(\n    ['div',\n    ['h1', 'Title'],\n    ['p', 'Paragraph']]\n  )\n\n  equal div.children.length, 2\n  h.equalHtml div, '<div><h1>Title</h1><p>Paragraph</p></div>'\n\n  div2 = html(\n    ['div',\n    ['h1', 'Title'],\n    ['p', 'Paragraph', ['span', 'Words']]]\n  )\n\n  equal _.last(div2.children).children.length, 1\n\n  h.equalHtml(\n    div2, '<div><h1>Title</h1><p>Paragraph<span>Words</span></p></div>'\n  )\n\ntest 'arrays for nesting is ok', 4, ->\n  template = html(['div', [['h1', 'Title'], ['p', 'Paragraph']]])\n  h.equalHtml template, '<div><h1>Title</h1><p>Paragraph</p></div>'\n  equal template.children.length, 2\n\n  template = html(['div', [['h1', 'Title']], ['p', 'Paragraph']])\n  h.equalHtml template, '<div><h1>Title</h1><p>Paragraph</p></div>'\n  equal template.children.length, 2\n\ntest 'can use id selector', 1, ->\n  h.equalHtml html(['div#frame']), '<div id=\"frame\"></div>'\n\ntest 'can use id attribute', 1, ->\n  h.equalHtml html(['div', id: 'frame']), '<div id=\"frame\"></div>'\n\ntest 'can use class selector', 2, ->\n  h.equalHtml html(['div.foo']), '<div class=\"foo\"></div>'\n  h.equalHtml html(['div.foo.bar']), '<div class=\"foo bar\"></div>'\n\ntest 'can use class attribute', 1, ->\n  h.equalHtml(\n    html(\n      ['div', class: 'panel']\n    ), '<div class=\"panel\"></div>', 'can use class attribute'\n  )\n\ntest 'can combine id and class selectors', 2, ->\n  h.equalHtml html(['div#baz.foo']), '<div id=\"baz\" class=\"foo\"></div>'\n  h.equalHtml html(['div#baz.foo.bar']), '<div id=\"baz\" class=\"foo bar\"></div>'\n\ntest 'default tag type is div', ->\n  h.equalHtml html(['#baz']), '<div id=\"baz\"></div>', 'default tag type is div'\n\ntest 'can set properties', 2, ->\n  a = html(['a', href: 'http://google.com']).dom\n  equal a.href, 'http://google.com/'\n\n  h.equalHtml(\n    html(\n      ['input', name: 'yes', type: 'checkbox']\n    ), '<input name=\"yes\" type=\"checkbox\">'\n  )\n\ntest 'registers event handlers', 2, ->\n  onClick = sinon.spy()\n  p = html(['p', click: onClick, 'something']).dom\n  sim.click p\n  equal onClick.called, true\n  equal onClick.calledWith(p), true\n\ntest 'sets styles', 1, ->\n  div = html(['div', style: {color: 'red'}]).dom\n  equal div.style.color, 'red'\n\ntest 'property styles', 2, ->\n  color = property('red')\n  div = html(['div', style: {color: color}]).dom\n  equal div.style.color, 'red'\n  color('blue')\n  equal div.style.color, 'blue'\n\nasyncTest 'computed property styles', 5, ->\n  bool1 = property(true)\n  bool2 = property(false)\n  comp = computed bool1, bool2, (a, b) ->\n    switch\n      when a and not b then 'red'\n      when not a and not b then 'green'\n      when a and b then 'blue'\n  counter = 0\n\n  comp -> counter += 1\n\n  div = html(['div', style: {color: comp}]).dom\n\n  equal div.style.color, 'red', 'equals computed value'\n\n  bool1(false)\n\n  h.waitForSync ->\n    equal counter, 1, 'calls binding'\n    equal div.style.color, 'green', 'equals computed value after update'\n\n    bool1(true); bool2(true)\n    h.waitForSync ->\n      equal counter, 2, 'calls binding once'\n      equal div.style.color, 'blue', 'equals computed value after update'\n      start()\n\ntest 'sets data attributes', 1, ->\n  div = html(['div', 'data-value': 5]).dom\n  equal div.getAttribute('data-value'), '5'\n\ntest 'boolean, number, date, regex get to-string\\'ed', 1, ->\n  e = html(['p', true, false, 4, new Date('Mon Jan 15 2001'), /hello/]).dom\n  ok e.outerHTML.match(\n    \"<p>truefalse4Mon Jan 15 2001 00:00:00 [0-9A-Z- ()]+/hello/\"\n  )\n\ntest 'observable content', ->\n  title = property()\n  title 'initial content'\n  h1 = html(['h1', title])\n  h.equalHtml h1, '<h1>initial content</h1>'\n  title 'updated content'\n  h.equalHtml h1, '<h1>updated content</h1>'\n\ntest 'observable property', ->\n  checked = property()\n  checked true\n  checkbox = html(['input', type: 'checkbox', checked: checked]).dom\n  equal checkbox.checked, true\n  checked false\n  equal checkbox.checked, false\n\ntest 'observable object property', ->\n  obj = object(name: 'Karen')\n  div = html(['div', obj.prop('name')])\n  h.equalHtml div, \"<div>Karen</div>\"\n\n  obj.set('name', 'Louis')\n  h.equalHtml div, \"<div>Louis</div>\"\n\ntest 'observable selected', ->\n  coll = collection(['foo','bar','fizz','buzz'])\n  content = html(\n    [\"#content\",\n    \"!!\",\n    coll.html(selected: (selected) -> [\"h1\", selected, selected.index])\n    \"!!\"]\n  )\n  h.equalHtml content, '<div id=\"content\">!!!!</div>'\n  coll.selectAt(0)\n  h.equalHtml content, '<div id=\"content\">!!<h1>foo0</h1>!!</div>'\n  # coll.selectAt(1)\n  # h.equalHtml content, '<div id=\"content\">!!<h1>bar1</h1>!!</div>'\n\ntest 'observable collection properties', 2, ->\n  coll = collection(['foo','bar','fizz','buzz'])\n  ul = html(\n    ['ul', coll.html((obj) -> ['li', obj.index, obj])]\n  )\n\n  h.equalHtml(\n    ul, \"<ul><li>0foo</li><li>1bar</li><li>2fizz</li><li>3buzz</li></ul>\"\n  )\n\n  coll.removeAt(1)\n\n  h.equalHtml(\n    ul, \"<ul><li>0foo</li><li>1fizz</li><li>2buzz</li></ul>\"\n  )\n\ntest 'observable collection objects', ->\n  coll = collection([name: 'Karen'])\n\n  ul = html(\n    ['ul', coll.html((obj) -> ['li', obj.index, obj.prop(\"name\")])]\n  )\n\n  h.equalHtml ul, \"<ul><li>0Karen</li></ul>\"\n  coll.at(0).set('name', 'Louis')\n  h.equalHtml ul, \"<ul><li>0Louis</li></ul>\"\n  coll.add(name: 'Keith')\n  h.equalHtml ul, \"<ul><li>0Louis</li><li>1Keith</li></ul>\"\n  coll.add(name: 'Richard')\n  h.equalHtml ul, \"<ul><li>0Louis</li><li>1Keith</li><li>2Richard</li></ul>\"\n  coll.removeAt(1)\n  h.equalHtml ul, \"<ul><li>0Louis</li><li>1Richard</li></ul>\"\n\nasyncTest 'computed properties', ->\n  [p1, p2] = _.times 2, (n) -> property(n)\n  comp = computed(p1, p2, (a, b) -> \"\" + a + b)\n  p = html(['p', {}, comp])\n  h.equalHtml p, '<p>01</p>', 'outputs computed property to html'\n  p1(1)\n  h.waitForSync ->\n    h.equalHtml p, '<p>11</p>', 'outputs computed property to html'\n    start()\n\ntest 'template uses existing dom ids', ->\n  domDiv.id = 'foo'\n\n  div = html(['#foo', ['p', 'hello page']])\n  equal domDiv.innerHTML, div.dom.innerHTML\n\ntest 'does not use existing dom ids if tags do not match', ->\n  domDiv.id = 'foo'\n\n  div = html(['p#foo', ['p', 'hello page']])\n  notEqual domDiv.innerHTML, div.dom.innerHTML\n",
    "_ = require 'lodash'\n\nFunction::andThen = (argFunction) ->\n  invokingFunction = @\n  -> argFunction.call @, invokingFunction.apply(@, arguments)\n\nFunction::compose = (argFunction) ->\n  invokingFunction = @\n  -> invokingFunction.call @, argFunction.apply(@, arguments)\n\nLocationDouble = (href) ->\n  @replace(href)\n\n_.extend LocationDouble.prototype,\n  parser: document.createElement('a')\n  toString: -> @href\n  replace: (href) ->\n    @parser.href = href\n    _.extend(\n      @, \\\n      _.pick(@parser, \\\n        'href', 'hash', 'host', 'search', \\\n        'fragment', 'pathname', 'protocol' \\\n      )\n    )\n    @pathname = \"/#{@pathname}\" unless /^\\//.test @pathname\n\nmodule.exports =\n  Location: LocationDouble\n  waitForSync: (func) -> _.delay(func, 5)\n  equalHtml: (dom, string) -> equal dom.dom.outerHTML, string\n"
  ],
  "sourceRoot": ""
}